[{"task_id": 2545, "output": ["import math\n\ndef calculate_rainfall_probability(T, inputs):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Parameters:\n    T (int): Number of test cases.\n    inputs (list): List of tuples containing probability of rainfall `P` and time `time`.\n\n    Returns:\n    list: List of probabilities that it rains during the time Raj is on the way.\n    \"\"\"\n    probabilities = []\n    for P, time in inputs:\n        # Calculate the probability that it does not rain during the time Raj is on the way\n        no_rain_probability = (1 - P) ** (time / 1440)\n        # Calculate the probability that it rains during the time Raj is on the way\n        rainfall_probability = 1 - no_rain_probability\n        # Round the result to 4 decimal places\n        rainfall_probability = round(rainfall_probability, 4)\n        probabilities.append(rainfall_probability)\n    return probabilities\n\n# Read the number of test cases\nT = int(input())\n\n# Read the inputs\ninputs = []\nfor _ in range(T):\n    P, time = map(float, input().split())\n    inputs.append((P, time))\n\n# Calculate and print the results\nresults = calculate_rainfall_probability(T, inputs)\nfor result in results:\n    print(result)", "def calculate_rain_probability(test_cases):\n    \"\"\"\n    This function calculates the probability that it rains during the time Raj is on his way to the office.\n\n    Parameters:\n    test_cases (list): A list of tuples, where each tuple contains the probability of rain (P) and the time taken to reach the office (time).\n\n    Returns:\n    None\n    \"\"\"\n    for p, time in test_cases:\n        # Calculate the probability that it rains during the time Raj is on his way\n        rain_probability = min(p, 1 - p) * (time / 1440)\n\n        # Round the answer to 4 decimal places\n        rain_probability = round(rain_probability, 4)\n\n        # Print the result\n        print(f\"{rain_probability}\")\n\n\n# Get the number of test cases\ntest_cases = int(input())\n\n# Read the test cases\ntest_cases_list = []\nfor _ in range(test_cases):\n    p, time = map(float, input().split())\n    test_cases_list.append((p, time))\n\n# Calculate and print the results\ncalculate_rain_probability(test_cases_list)", "import math\n\ndef calculate_rainfall_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes for Raj to reach his office.\n\n    Args:\n        p (float): Probability of rainfall today (0-1)\n        time (int): Time it takes to reach the office (in minutes)\n\n    Returns:\n        float: Probability of rainfall during the time it takes to reach the office\n    \"\"\"\n    # Calculate the probability of no rainfall during the time it takes to reach the office\n    no_rain_probability = (1 - p) ** (time / 1440)\n\n    # Calculate the probability of rainfall during the time it takes to reach the office\n    rainfall_probability = 1 - no_rain_probability\n\n    return round(rainfall_probability, 4)\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Process each test case\n    for _ in range(test_cases):\n        # Read the probability of rainfall and time to reach the office\n        p, time = map(float, input().split())\n\n        # Calculate and print the probability of rainfall during the time it takes to reach the office\n        print(calculate_rainfall_probability(p, time))\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(T, P, time):\n    \"\"\"\n    Calculate the probability of rain during the time Raj is on the way to his office.\n\n    Args:\n    T (int): The number of test cases.\n    P (float): The probability of rain today.\n    time (int): The time (in minutes) it will take for Raj to reach his office.\n\n    Returns:\n    None\n    \"\"\"\n    # Calculate the number of minutes in a day\n    total_minutes_in_a_day = 1440\n\n    # Calculate the probability of rain during the time Raj is on the way\n    probability_of_rain = P * (time / total_minutes_in_a_day)\n\n    # Round the probability to 4 decimal places\n    probability_of_rain = round(probability_of_rain, 4)\n\n    return probability_of_rain\n\n\n# Read the number of test cases\nT = int(input())\n\n# Iterate over each test case\nfor _ in range(T):\n    # Read the probability of rain and time\n    P, time = map(float, input().split())\n\n    # Calculate and print the probability of rain\n    print(calculate_probability(T, P, time))", "def calculate_rain_probability(probability, time):\n    \"\"\"\n    Calculate the probability that it rains during Raj's journey.\n\n    Args:\n        probability (float): The probability that it will rain today.\n        time (int): The time it will take for Raj to reach his office.\n\n    Returns:\n        float: The probability that it rains during Raj's journey.\n    \"\"\"\n    return min(probability * time, 1)\n\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Process each test case\n    for _ in range(test_cases):\n        # Read the probability and time\n        probability, time = map(float, input().split())\n\n        # Calculate and print the result\n        result = calculate_rain_probability(probability, time)\n        print(\"{:.4f}\".format(result))\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n        p (float): Probability of rainfall today (0 <= p <= 0.5)\n        time (int): Time (in minutes) it will take for Raj to reach his office (10 <= time <= 720)\n\n    Returns:\n        float: Probability that it rains during the time Raj is on the way (rounded to 4 decimal places)\n    \"\"\"\n    # Calculate the average time between rainfall occurrences\n    avg_time = 1440 / (p / (1 - p))\n    \n    # Calculate the probability that it rains during the given time\n    prob = 1 - math.exp(-time / avg_time)\n    \n    # Return the probability rounded to 4 decimal places\n    return round(prob, 4)\n\n# Read the number of test cases\nT = int(input())\n\n# Read the input data\nfor _ in range(T):\n    # Read the probability of rainfall and time\n    p, time = map(float, input().split())\n    \n    # Calculate and print the probability\n    print(calculate_probability(p, time))", "import math\n\ndef calculate_rain_probability(T, test_cases):\n    \"\"\"\n    This function calculates the probability that it rains during the time Raj is on the way to his office.\n\n    Args:\n    T (int): The number of test cases.\n    test_cases (list): A list of tuples containing the probability P and time.\n\n    Returns:\n    list: A list of probabilities that it rains during the time Raj is on the way.\n    \"\"\"\n\n    # Initialize an empty list to store the probabilities\n    probabilities = []\n\n    # Iterate over each test case\n    for P, time in test_cases:\n        # Calculate the probability that it rains during the time Raj is on the way\n        # We assume that the time is a perfect divisor of 1440, so the number of minutes in a day is 1440\n        probability = P * (1440 / time)\n\n        # Round the probability to 4 decimal places\n        probability = round(probability, 4)\n\n        # Append the probability to the list\n        probabilities.append(probability)\n\n    # Return the list of probabilities\n    return probabilities\n\n\n# Get the number of test cases\nT = int(input())\n\n# Get the test cases\ntest_cases = []\nfor _ in range(T):\n    P, time = map(float, input().split())\n    test_cases.append((P, time))\n\n# Calculate the probabilities\nprobabilities = calculate_rain_probability(T, test_cases)\n\n# Print the probabilities\nfor probability in probabilities:\n    print(probability)", "import math\n\ndef calculate_probability(rain_probability, travel_time):\n    \"\"\"\n    Calculate the probability that it rains during Raj's journey to the office.\n\n    Args:\n        rain_probability (float): The probability that it will rain today.\n        travel_time (int): The time it takes for Raj to reach his office.\n\n    Returns:\n        float: The probability that it rains during Raj's journey.\n    \"\"\"\n    # Calculate the probability of no rain during the travel time\n    no_rain_probability = (1 - rain_probability) ** (travel_time // 1440)\n    \n    # Calculate the probability of rain during the travel time\n    rain_probability_during_travel = 1 - no_rain_probability\n    \n    # Round the result to 4 decimal places\n    result = round(rain_probability_during_travel, 4)\n    \n    return result\n\ndef main():\n    \"\"\"\n    Main function to read input and calculate the probability of rain during Raj's journey.\n    \"\"\"\n    # Read the number of test cases\n    test_cases = int(input())\n    \n    # Read each test case\n    for _ in range(test_cases):\n        # Read the rain probability and travel time\n        rain_probability, travel_time = map(float, input().split())\n        \n        # Calculate and print the result\n        print(calculate_probability(rain_probability, travel_time))\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way to his office.\n\n    Args:\n        test_cases (list): A list of tuples containing the probability of rain and time.\n\n    Returns:\n        list: A list of probabilities that it rains during the time Raj is on the way.\n    \"\"\"\n    results = []\n    for probability, time in test_cases:\n        # Calculate the probability that it rains during the time Raj is on the way\n        rainfall_probability = probability * (time / 1440)\n        results.append(round(rainfall_probability, 4))\n    return results\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Read the test cases\n    test_cases_data = []\n    for _ in range(test_cases):\n        probability, time = map(float, input().split())\n        test_cases_data.append((probability, time))\n\n    # Calculate and print the results\n    results = calculate_rainfall_probability(test_cases_data)\n    for result in results:\n        print(result)\n\nif __name__ == \"__main__\":\n    main()", "def calculate_rainfall_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way to his office.\n\n    Args:\n    test_cases (list): A list of tuples, where each tuple contains the probability of rain (P) and the time (in minutes) it takes for Raj to reach his office.\n\n    Returns:\n    list: A list of probabilities that it rains during the time Raj is on the way to his office.\n    \"\"\"\n    results = []\n    for p, time in test_cases:\n        # Calculate the probability that it rains during the time Raj is on the way to his office\n        # This is done by multiplying the probability of rain (p) with the fraction of the day that has passed\n        # Since time is a perfect divisor of 1440, we can calculate the fraction of the day that has passed\n        fraction_of_day_passed = time / 1440\n        rainfall_probability = round(p * fraction_of_day_passed, 4)\n        results.append(rainfall_probability)\n    return results\n\n\n# Read the number of test cases\nnum_test_cases = int(input())\n\n# Read the test cases\ntest_cases = []\nfor _ in range(num_test_cases):\n    p, time = map(float, input().split())\n    test_cases.append((p, time))\n\n# Calculate and print the results\nresults = calculate_rainfall_probability(test_cases)\nfor result in results:\n    print(result)", "import math\n\ndef calculate_probability(test_cases):\n    \"\"\"\n    Calculate the probability of rainfall during Raj's commute to the office.\n\n    Args:\n    test_cases (list): A list of tuples containing probability of rainfall and commute time.\n\n    Returns:\n    list: A list of probabilities of rainfall during Raj's commute.\n    \"\"\"\n    probabilities = []\n    for p, time in test_cases:\n        # Calculate the probability of no rainfall during the commute\n        no_rain_probability = (1 - p) ** (time / 1440)\n        # Calculate the probability of rainfall during the commute\n        rain_probability = 1 - no_rain_probability\n        # Round the result to 4 decimal places\n        rain_probability = round(rain_probability, 4)\n        probabilities.append(rain_probability)\n    return probabilities\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n    # Read the test cases\n    test_cases_list = [tuple(map(float, input().split())) for _ in range(test_cases)]\n    # Calculate the probabilities\n    probabilities = calculate_probability(test_cases_list)\n    # Print the probabilities\n    for probability in probabilities:\n        print(f\"{probability}\")\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability(time, probability):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n        time (int): Time it takes for Raj to reach his office in minutes.\n        probability (float): Probability of rainfalls today.\n\n    Returns:\n        float: Probability that it rains during the time Raj is on the way.\n    \"\"\"\n    # Calculate the number of minutes in a day\n    minutes_in_a_day = 1440\n\n    # Calculate the probability that it rains during the time Raj is on the way\n    rainfall_probability = probability * (minutes_in_a_day / time)\n\n    # Round the result to 4 decimal places\n    rainfall_probability = round(rainfall_probability, 4)\n\n    return rainfall_probability\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Process each test case\n    for _ in range(test_cases):\n        # Read the probability and time for the current test case\n        probability, time = map(float, input().split())\n\n        # Calculate and print the rainfall probability\n        print(calculate_rainfall_probability(time, probability))\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rain_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n        test_cases (list): A list of tuples, where each tuple contains a probability (P) and a time (in minutes).\n\n    Returns:\n        list: A list of probabilities that it rains during the time Raj is on the way.\n    \"\"\"\n    result = []\n    for P, time in test_cases:\n        # Calculate the probability that it rains during the given time\n        rain_probability = 1 - (1 - P) ** (time / 1440)\n        # Round the result to 4 decimal places\n        rain_probability = round(rain_probability, 4)\n        result.append(rain_probability)\n    return result\n\n# Read the number of test cases\nnum_test_cases = int(input())\n\n# Read the test cases\ntest_cases = [tuple(map(float, input().split())) for _ in range(num_test_cases)]\n\n# Calculate and print the results\nfor i, result in enumerate(calculate_rain_probability(test_cases)):\n    print(result)", "import math\n\ndef calculate_rain_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes for Raj to reach his office.\n\n    Args:\n    test_cases (list): A list of tuples, where each tuple contains the probability of rain (`P`) and time (`time`).\n\n    Returns:\n    list: A list of probabilities of rain during the time it takes for Raj to reach his office.\n    \"\"\"\n    result = []\n    for P, time in test_cases:\n        # Calculate the probability of rain during the time it takes for Raj to reach his office\n        probability = P * (time / 1440)\n        # Round the result to 4 decimal places\n        probability = round(probability, 4)\n        # Append the result to the list\n        result.append(probability)\n    return result\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n    # Read the test cases\n    test_cases_data = [tuple(map(float, input().split())) for _ in range(test_cases)]\n    # Calculate the probabilities\n    probabilities = calculate_rain_probability(test_cases_data)\n    # Print the probabilities\n    for probability in probabilities:\n        print(f\"{probability}\")\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(rain_probability, travel_time):\n    \"\"\"\n    Calculate the probability of rain during travel time.\n\n    Args:\n    rain_probability (float): Probability of rain (0 to 1)\n    travel_time (int): Travel time in minutes\n\n    Returns:\n    float: Probability of rain during travel time\n    \"\"\"\n    # Calculate the number of minutes in a day (1440)\n    total_minutes = 1440\n\n    # Calculate the probability of rain during travel time\n    # by multiplying the rain probability with the travel time\n    # and dividing by the total number of minutes in a day\n    probability = (rain_probability * travel_time) / total_minutes\n\n    return round(probability, 4)\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Process each test case\nfor _ in range(test_cases):\n    # Read the probability of rain and travel time\n    rain_probability, travel_time = map(float, input().split())\n\n    # Calculate and print the probability of rain during travel time\n    print(calculate_probability(rain_probability, travel_time))", "import math\n\ndef calculate_rainfall_probability(probability, time):\n    \"\"\"\n    Calculate the probability that it rains during the given time.\n\n    Args:\n        probability (float): The probability of rain today.\n        time (int): The time it takes to reach the office (in minutes).\n\n    Returns:\n        float: The probability that it rains during the given time.\n    \"\"\"\n    # Calculate the number of minutes in a day\n    total_minutes = 1440\n\n    # Calculate the probability that it does not rain during the given time\n    no_rain_probability = (1 - probability) ** (time / total_minutes)\n\n    # Calculate the probability that it rains during the given time\n    rain_probability = 1 - no_rain_probability\n\n    # Round the result to 4 decimal places\n    rain_probability = round(rain_probability, 4)\n\n    return rain_probability\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Process each test case\n    for _ in range(test_cases):\n        # Read the probability and time\n        probability, time = map(float, input().split())\n\n        # Calculate and print the result\n        result = calculate_rainfall_probability(probability, time)\n        print(result)\n\nif __name__ == \"__main__\":\n    main()", "def calculate_rain_probability():\n    # Read the number of test cases\n    with open(\"input.txt\", \"r\") as file:\n        test_cases = int(file.readline())\n\n    # Write output to output.txt file\n    with open(\"output.txt\", \"w\") as output_file:\n        for _ in range(test_cases):\n            # Read P and time from input file\n            with open(\"input.txt\", \"r\") as file:\n                p, time = map(float, file.readline().split())\n\n            # Calculate probability of rain during the time\n            rain_probability = p * time / 1440.0\n\n            # Round the result to 4 decimal places\n            rain_probability = round(rain_probability, 4)\n\n            # Write the result to output file\n            output_file.write(str(rain_probability) + \"\\n\")\n\n# Run the code\ncalculate_rain_probability()\ndef calculate_rain_probability(p, time):\n    # Calculate probability of rain during the time\n    rain_probability = p * time / 1440.0\n\n    # Round the result to 4 decimal places\n    rain_probability = round(rain_probability, 4)\n\n    return rain_probability\n\n# Test the function\np_values = [0.5, 0.7, 0.3]\ntime_values = [10, 720, 180]\n\nfor p, time in zip(p_values, time_values):\n    print(calculate_rain_probability(p, time))", "import math\n\ndef calculate_rainfall_probability():\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way to his office.\n    \n    Args:\n    None\n    \n    Returns:\n    float: The probability of rainfall during Raj's commute.\n    \"\"\"\n    test_cases = int(input())\n    \n    for _ in range(test_cases):\n        probability, time = map(float, input().split())\n        \n        # Calculate the number of intervals of 10 minutes in the given time\n        num_intervals = time // 10\n        \n        # Calculate the probability of no rainfall in one interval\n        no_rain_probability = (1 - probability) ** num_intervals\n        \n        # Calculate the probability of rainfall during Raj's commute\n        rainfall_probability = 1 - no_rain_probability\n        \n        # Round the result to 4 decimal places\n        rainfall_probability = round(rainfall_probability, 4)\n        \n        print(f\"{rainfall_probability}\")\n\nif __name__ == \"__main__\":\n    calculate_rainfall_probability()", "import math\n\ndef calculate_probability(time, probability):\n    \"\"\"\n    This function calculates the probability that it rains during the time it takes to reach the office.\n\n    Args:\n        time (float): The time it takes to reach the office in minutes.\n        probability (float): The probability that it will rain today.\n\n    Returns:\n        float: The probability that it rains during the time it takes to reach the office.\n    \"\"\"\n    # Calculate the probability that it rains during the time it takes to reach the office\n    probability_rains = probability * time\n    \n    # Calculate the probability that it does not rain during the time it takes to reach the office\n    probability_does_not_rain = (1 - probability) * (time - probability_rains)\n    \n    # Return the probability that it rains during the time it takes to reach the office\n    return probability_rains / time\n\ndef main():\n    \"\"\"\n    This function reads the input and calls the calculate_probability function to calculate the result.\n    \"\"\"\n    # Read the number of test cases\n    num_test_cases = int(input())\n    \n    # Iterate over each test case\n    for _ in range(num_test_cases):\n        # Read the probability and time\n        probability, time = map(float, input().split())\n        \n        # Calculate the result and round to 4 decimal places\n        result = round(calculate_probability(time, probability), 4)\n        \n        # Print the result\n        print(result)\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rain_probability(T, cases):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n        T (int): The number of test cases.\n        cases (list): A list of tuples containing the probability of rain and the time.\n\n    Returns:\n        list: A list of the calculated probabilities.\n    \"\"\"\n    probabilities = []\n    for p, time in cases:\n        # Calculate the probability that it does not rain\n        prob_not_rain = 1 - p\n        # Calculate the probability that it rains during the time\n        prob_rain = (prob_not_rain * (time / 1440)) ** time\n        probabilities.append(round(prob_rain, 4))\n    return probabilities\n\n# Read the number of test cases\nT = int(input())\n\n# Read the test cases\ncases = []\nfor _ in range(T):\n    p, time = map(float, input().split())\n    cases.append((p, time))\n\n# Calculate and print the probabilities\nprobabilities = calculate_rain_probability(T, cases)\nfor prob in probabilities:\n    print(prob)", "import math\n\ndef calculate_probability():\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n    \"\"\"\n    t = int(input())  # number of test cases\n    for _ in range(t):\n        p, time = map(float, input().split())  # input probability and time\n        probability = p * (time / 1440)  # calculate the probability\n        print(f\"{probability:.4f}\")  # print the result, rounded to 4 decimal places\n\nif __name__ == \"__main__\":\n    calculate_probability()", "def calculate_rainfall_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on his way to the office.\n\n    Args:\n        test_cases (list): A list of tuples containing the probability of rain and time.\n\n    Returns:\n        list: A list of probabilities rounded to 4 decimal places.\n    \"\"\"\n    rainfall_probabilities = []\n    for probability, time in test_cases:\n        # Convert probability to float\n        probability = float(probability)\n        \n        # Calculate the rainfall probability\n        rainfall_probability = probability * (time / 1440)\n        \n        # Round the result to 4 decimal places\n        rainfall_probability = round(rainfall_probability, 4)\n        \n        rainfall_probabilities.append(rainfall_probability)\n    \n    return rainfall_probabilities\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n    \n    # Read the test cases\n    test_cases = []\n    for _ in range(num_test_cases):\n        probability, time = input().split()\n        test_cases.append((probability, int(time)))\n    \n    # Calculate and print the rainfall probabilities\n    rainfall_probabilities = calculate_rainfall_probability(test_cases)\n    for probability in rainfall_probabilities:\n        print(f\"{probability:.4f}\")\n\nif __name__ == \"__main__\":\n    main()", "def rainfall_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during a certain time period.\n\n    Args:\n        p (float): The overall probability of rain.\n        time (int): The duration of the time period in minutes.\n\n    Returns:\n        float: The probability that it rains during the time period.\n    \"\"\"\n    # Calculate the probability that it does not rain during the time period\n    no_rain_probability = (1 - p) ** (time / 1440)\n    \n    # Calculate the probability that it rains during the time period\n    rain_probability = 1 - no_rain_probability\n    \n    # Round the result to 4 decimal places\n    return round(rain_probability, 4)\n\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Process each test case\nfor _ in range(test_cases):\n    # Read the probability of rain and time\n    p, time = map(float, input().split())\n    \n    # Calculate and print the probability of rain during the time period\n    print(rainfall_probability(p, time))", "def calculate_rain_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n    p (float): The probability of rain today.\n    time (int): The time it takes for Raj to reach his office.\n\n    Returns:\n    float: The probability that it rains during the time Raj is on the way.\n    \"\"\"\n    # Calculate the probability that it rains during the time Raj is on the way\n    # This is done by multiplying the probability of rain today with the fraction of the day that the time represents\n    return p * (time / 1440)\n\n\ndef main():\n    \"\"\"\n    The main function to read the input, calculate the probability, and print the result.\n    \"\"\"\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Iterate over each test case\n    for _ in range(num_test_cases):\n        # Read the probability of rain and time\n        p, time = map(float, input().split())\n\n        # Calculate the probability that it rains during the time Raj is on the way\n        probability = calculate_rain_probability(p, time)\n\n        # Print the result rounded to 4 decimal places\n        print(\"{:.4f}\".format(probability))\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(p, time):\n    \"\"\"\n    Calculate the probability of rainfall during travel.\n\n    Args:\n    p (float): Probability of rainfall today.\n    time (int): Time taken for Raj to reach his office in minutes.\n\n    Returns:\n    float: Probability of rainfall during travel.\n    \"\"\"\n    # Calculate the probability of no rainfall during travel\n    no_rainfall_prob = 1 - p\n    \n    # Calculate the probability of rainfall during travel\n    rainfall_prob = 1 - (no_rainfall_prob ** (time / 1440))\n    \n    # Return the result rounded to 4 decimal places\n    return round(rainfall_prob, 4)\n\n# Read the number of test cases\nnum_test_cases = int(input())\n\n# Iterate over each test case\nfor _ in range(num_test_cases):\n    # Read the probability of rainfall and travel time\n    p, time = map(float, input().split())\n    \n    # Calculate and print the result\n    print(calculate_probability(p, time))", "import math\n\ndef calculate_rain_probability(T, test_cases):\n    \"\"\"\n    Calculate the probability of rain during the time it takes Raj to reach his office.\n\n    Args:\n        T (int): The number of test cases.\n        test_cases (list): A list of tuples containing the probability of rain today and the time taken.\n\n    Returns:\n        list: A list of probabilities of rain during the time it takes Raj to reach his office.\n    \"\"\"\n\n    result = []\n    for probability, time in test_cases:\n        # Calculate the probability of rain during the time it takes Raj to reach his office\n        # by multiplying the probability of rain today with the fraction of the day that has passed\n        rain_probability = probability * (time / 1440)\n        # Round the result to 4 decimal places\n        result.append(round(rain_probability, 4))\n\n    return result\n\n\ndef main():\n    # Read the number of test cases\n    T = int(input())\n    test_cases = []\n\n    # Read the test cases\n    for _ in range(T):\n        P, time = map(float, input().split())\n        test_cases.append((P, time))\n\n    # Calculate and print the result\n    result = calculate_rain_probability(T, test_cases)\n    for probability in result:\n        print(f\"{probability:.4f}\")\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(probability, time):\n    \"\"\"\n    Calculate the probability of rain during the time it takes for Raj to reach his office.\n\n    Args:\n        probability (float): The probability of rain today.\n        time (int): The time it takes for Raj to reach his office in minutes.\n\n    Returns:\n        float: The probability of rain during the time it takes for Raj to reach his office.\n    \"\"\"\n    # Calculate the probability of no rain\n    no_rain_probability = 1 - probability\n    \n    # Calculate the probability of rain using the formula for exponential distribution\n    # The probability of rain is the probability of no rain multiplied by the time\n    rain_probability = no_rain_probability * (1 - math.exp(-probability * time))\n    \n    return round(rain_probability, 4)\n\ndef main():\n    # Get the number of test cases\n    test_cases = int(input())\n    \n    # Process each test case\n    for _ in range(test_cases):\n        # Get the probability of rain and time\n        probability, time = map(float, input().split())\n        \n        # Calculate and print the probability of rain\n        print(calculate_probability(probability, time))\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way to his office.\n\n    Args:\n        test_cases (list): A list of tuples, where each tuple contains the probability of rain (P) and the time (in minutes) it takes for Raj to reach his office.\n\n    Returns:\n        list: A list of probabilities, each rounded to 4 decimal places.\n    \"\"\"\n    probabilities = []\n    for p, time in test_cases:\n        # Calculate the probability that it rains during the time Raj is on the way\n        probability = (1 - (1 - p) ** (1440 / time))\n        probabilities.append(round(probability, 4))\n    return probabilities\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Read the test cases\n    test_cases = []\n    for _ in range(num_test_cases):\n        p, time = map(float, input().split())\n        test_cases.append((p, time))\n\n    # Calculate and print the probabilities\n    probabilities = calculate_rainfall_probability(test_cases)\n    for probability in probabilities:\n        print(f\"{probability}\")\n\nif __name__ == \"__main__\":\n    main()", "def calculate_probability(T, cases):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n    T (int): The number of test cases.\n    cases (list): A list of tuples containing the probability of rain and the time.\n\n    Returns:\n    None\n    \"\"\"\n    for p, time in cases:\n        # Calculate the probability that it rains during the time Raj is on the way\n        probability = p * (time / 1440)\n        # Round the answer to 4 decimal places\n        print(f\"{probability:.4f}\")\n\ndef main():\n    # Read the number of test cases\n    T = int(input())\n    # Read the cases\n    cases = []\n    for _ in range(T):\n        # Read the probability of rain and the time\n        p, time = map(float, input().split())\n        cases.append((p, time))\n    # Calculate and print the result\n    calculate_probability(T, cases)\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability(probability, time):\n    \"\"\"\n    Calculate the probability that it rains during a given time interval.\n\n    Args:\n        probability (float): The probability of rainfall.\n        time (int): The time interval in minutes.\n\n    Returns:\n        float: The probability that it rains during the given time interval.\n    \"\"\"\n    return round(probability * time, 4)\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Process each test case\n    for _ in range(test_cases):\n        # Read the probability of rainfall and time interval\n        probability, time = map(float, input().split())\n\n        # Calculate and print the rainfall probability\n        print(calculate_rainfall_probability(probability, time))\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability():\n    t = int(input())\n    for _ in range(t):\n        p, time = map(float, input().split())\n        # Calculate the probability of no rain during the journey\n        no_rain_probability = (1 - p) ** (time // 1440)\n        # Calculate the probability of rain during the journey\n        rain_probability = 1 - no_rain_probability\n        # Print the result rounded to 4 decimal places\n        print(f\"{rain_probability:.4f}\")\n\nif __name__ == \"__main__\":\n    calculate_probability()", "import math\n\ndef calculate_probability():\n    \"\"\"\n    This function calculates the probability that it rains during the time Raj is on his way to the office.\n    \n    Parameters:\n    p (float): The probability of rain today.\n    time (int): The time it takes for Raj to reach his office.\n    \n    Returns:\n    float: The probability that it rains during the time Raj is on his way to the office.\n    \"\"\"\n    # Calculate the probability of rain during the time Raj is on his way\n    # This can be done by multiplying the probability of rain today by the fraction of the day that Raj is on his way\n    # Since the day has 1440 minutes, and Raj is on his way for time minutes, the fraction of the day that Raj is on his way is time / 1440\n    probability = p * (time / 1440)\n    \n    # Round the result to 4 decimal places\n    probability = round(probability, 4)\n    \n    return probability\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n    \n    # Read each test case\n    for _ in range(num_test_cases):\n        # Read the probability of rain and the time it takes for Raj to reach his office\n        p, time = map(float, input().split())\n        \n        # Calculate the probability that it rains during the time Raj is on his way\n        probability = calculate_probability()\n        \n        # Print the result\n        print(probability)\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rain_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during Raj's commute.\n    \n    Args:\n    p (float): Probability of rain today\n    time (int): Time taken for Raj's commute in minutes\n    \n    Returns:\n    float: Probability of rain during Raj's commute\n    \"\"\"\n    # Calculate the number of 1440-minute periods in Raj's commute\n    periods = time // 1440\n    \n    # Calculate the remaining minutes after subtracting the complete periods\n    remaining_minutes = time % 1440\n    \n    # Calculate the probability of rain during the complete periods\n    period_rain_probability = (1 - p) ** periods\n    \n    # Calculate the probability of rain during the remaining minutes\n    remaining_minutes_rain_probability = p ** remaining_minutes\n    \n    # Calculate the total probability of rain during Raj's commute\n    total_rain_probability = period_rain_probability * remaining_minutes_rain_probability\n    \n    return round(total_rain_probability, 4)\n\n\ndef main():\n    \"\"\"\n    Main function to handle the test cases.\n    \"\"\"\n    # Read the number of test cases\n    test_cases = int(input())\n    \n    # Process each test case\n    for _ in range(test_cases):\n        # Read the probability of rain and commute time\n        p, time = map(float, input().split())\n        \n        # Calculate and print the probability of rain during Raj's commute\n        print(calculate_rain_probability(p, time))\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(p, time):\n    \"\"\"\n    Calculate the probability of rainfall during a given time period.\n\n    Args:\n        p (float): Probability of rainfall (between 0 and 1).\n        time (int): Time in minutes.\n\n    Returns:\n        float: Probability of rainfall during the given time period.\n    \"\"\"\n    # Calculate the probability of no rainfall\n    prob_no_rainfall = 1 - p\n    \n    # Calculate the probability of rainfall during the given time period\n    prob_rainfall = (prob_no_rainfall * (1 - p)) ** (time // 1440) * p ** (time % 1440)\n    \n    # Round the result to 4 decimal places\n    prob_rainfall = round(prob_rainfall, 4)\n    \n    return prob_rainfall\n\n# Read the number of test cases\nnum_test_cases = int(input())\n\n# Process each test case\nfor _ in range(num_test_cases):\n    # Read the probability of rainfall and time\n    p, time = map(float, input().split())\n    \n    # Calculate and print the probability of rainfall during the given time period\n    print(calculate_probability(p, time))", "import math\n\ndef calculate_rain_probability():\n    test_cases = int(input())\n\n    for _ in range(test_cases):\n        probability, time = map(float, input().split())\n\n        # Calculate the probability that it rains during the time\n        # This is done by calculating the cumulative probability distribution function (CDF) of the normal distribution\n        # Since the problem doesn't specify the mean and standard deviation, we assume it's a uniform distribution\n        # and the mean is 0 and the standard deviation is the probability divided by 2\n        cdf_value = 1 - (1 - probability) * math.exp(-probability * time / 2)\n\n        # Round the result to 4 decimal places\n        result = round(cdf_value, 4)\n\n        print(result)\n\ncalculate_rain_probability()", "import math\n\ndef calculate_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes for Raj to reach his office.\n\n    Args:\n    p (float): The probability that it will rain today.\n    time (int): The time it takes for Raj to reach his office in minutes.\n\n    Returns:\n    float: The probability that it rains during the time it takes for Raj to reach his office.\n    \"\"\"\n    # Calculate the probability that it does not rain during the time\n    prob_not_rain = (1 - p) ** (time / 1440)\n    # Calculate the probability that it rains during the time\n    prob_rain = 1 - prob_not_rain\n    # Return the probability rounded to 4 decimal places\n    return round(prob_rain, 4)\n\n\ndef main():\n    \"\"\"\n    Main function to solve the problem.\n    \"\"\"\n    # Read the number of test cases\n    test_cases = int(input())\n    # Iterate over each test case\n    for _ in range(test_cases):\n        # Read the probability and time\n        p, time = map(float, input().split())\n        # Calculate and print the probability\n        print(calculate_probability(p, time))\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(rainfall_probability, travel_time):\n    \"\"\"\n    Calculate the probability of rainfall during Raj's commute.\n\n    Args:\n    rainfall_probability (float): The probability of rainfall today (0 to 1).\n    travel_time (int): The time it takes for Raj to reach his office (minutes).\n\n    Returns:\n    float: The probability of rainfall during Raj's commute.\n    \"\"\"\n    # Calculate the number of minutes in a day\n    minutes_in_a_day = 1440\n\n    # Calculate the probability of no rainfall during Raj's commute\n    no_rainfall_probability = (1 - rainfall_probability) ** (travel_time / minutes_in_a_day)\n\n    # Calculate the probability of rainfall during Raj's commute\n    rainfall_probability_during_commute = 1 - no_rainfall_probability\n\n    # Round the answer to 4 decimal places\n    rainfall_probability_during_commute = round(rainfall_probability_during_commute, 4)\n\n    return rainfall_probability_during_commute\n\n# Read the number of test cases\nnum_test_cases = int(input())\n\n# Process each test case\nfor _ in range(num_test_cases):\n    # Read the rainfall probability and travel time\n    rainfall_probability, travel_time = map(float, input().split())\n\n    # Calculate and print the probability of rainfall during Raj's commute\n    probability = calculate_probability(rainfall_probability, travel_time)\n    print(probability)", "import math\n\ndef calculate_probability(time, probability):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n        time (int): Time taken by Raj to reach his office in minutes.\n        probability (float): Probability of rain today.\n\n    Returns:\n        float: Probability that it rains during the time Raj is on the way.\n    \"\"\"\n    # Calculate the time interval where it rains during Raj's commute\n    start_time = 0\n    end_time = time\n\n    # Calculate the probability that it rains during Raj's commute\n    probability_rain = probability * (end_time - start_time) / 1440\n\n    return round(probability_rain, 4)\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Read the test cases\n    for _ in range(num_test_cases):\n        # Read the probability of rain and time taken by Raj\n        probability, time = map(float, input().split())\n\n        # Calculate and print the probability that it rains during Raj's commute\n        print(calculate_probability(time, probability))\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability(test_cases):\n    \"\"\"\n    Calculate the probability of rainfall during travel time for each test case.\n\n    Args:\n        test_cases (list): A list of tuples containing the probability of rainfall `P` and travel time `time`.\n\n    Returns:\n        list: A list of probabilities that it rains during the time Raj is on the way.\n    \"\"\"\n    results = []\n    for P, time in test_cases:\n        # Calculate the average number of events (rainfalls) per minute\n        average_events = P / time\n        # Calculate the probability of 1 or more events (rainfalls) using the Poisson distribution\n        probability = 1 - math.exp(-average_events)\n        # Round the result to 4 decimal places\n        probability = round(probability, 4)\n        results.append(probability)\n    return results\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Read the test cases\ntest_cases = [tuple(map(float, input().split())) for _ in range(test_cases)]\n\n# Calculate and print the results\nresults = calculate_rainfall_probability(test_cases)\nfor result in results:\n    print(result)", "import math\n\ndef calculate_rain_probability(test_cases):\n    \"\"\"\n    Calculate the probability of rain during Raj's trip to the office.\n\n    Args:\n    test_cases (list): A list of tuples, where each tuple contains two numbers: \n                       probability of rain (P) and time (in minutes) it will take for Raj to reach his office.\n\n    Returns:\n    list: A list of probabilities of rain during Raj's trip to the office.\n    \"\"\"\n\n    # Initialize an empty list to store the results\n    results = []\n\n    # Iterate over each test case\n    for p, time in test_cases:\n        # Calculate the probability of rain during Raj's trip\n        # This is done by multiplying the probability of rain with the fraction of the total time that Raj is traveling\n        # Since the total time is a multiple of 1440 (the number of minutes in a day), we can simply divide the time by 1440\n        # and multiply the result with p\n        result = p * (time / 1440)\n\n        # Round the result to 4 decimal places\n        result = round(result, 4)\n\n        # Append the result to the list\n        results.append(result)\n\n    # Return the list of results\n    return results\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Read the test cases\n    test_cases = []\n    for _ in range(num_test_cases):\n        p, time = map(float, input().split())\n        test_cases.append((p, time))\n\n    # Calculate and print the results\n    results = calculate_rain_probability(test_cases)\n    for result in results:\n        print(f\"{result:.4f}\")\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rain_probability(probability, time):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes to reach the office.\n\n    Args:\n    probability (float): The probability that it will rain today.\n    time (int): The time it takes to reach the office in minutes.\n\n    Returns:\n    float: The probability that it rains during the time it takes to reach the office.\n    \"\"\"\n    # Calculate the probability that it does not rain\n    no_rain_probability = 1 - probability\n    \n    # Calculate the probability that it rains during the time it takes to reach the office\n    # This is done by multiplying the probability that it does not rain for the first (time - 1) minutes\n    # with the probability that it rains in the last minute\n    rain_probability = (no_rain_probability ** (time - 1)) * probability\n    \n    # Return the probability that it rains during the time it takes to reach the office\n    return round(rain_probability, 4)\n\n\n# Get the number of test cases\ntest_cases = int(input())\n\n# Loop over each test case\nfor _ in range(test_cases):\n    # Get the probability of rain and the time it takes to reach the office\n    probability, time = map(float, input().split())\n    \n    # Calculate and print the probability that it rains during the time it takes to reach the office\n    print(calculate_rain_probability(probability, time))", "import math\n\ndef calculate_probability(T, cases):\n    \"\"\"\n    This function calculates the probability that it rains during the time it takes for Raj to reach his office.\n\n    Parameters:\n    T (int): The number of test cases.\n    cases (list): A list of tuples, where each tuple contains the probability of rain and the time it takes to reach the office.\n\n    Returns:\n    None\n    \"\"\"\n    for i in range(T):\n        probability, time = cases[i]\n        # Calculate the probability that it rains during the given time\n        probability_of_rain = 1 - (1 - probability) ** (time // 1440)\n        # If time is not a multiple of 1440, the probability remains the same\n        print(f\"{probability_of_rain:.4f}\")\n\n\n# Input\nT = int(input())\ncases = []\nfor _ in range(T):\n    probability, time = map(float, input().split())\n    cases.append((probability, time))\n\n# Calculate the probability\ncalculate_probability(T, cases)", "import math\n\ndef calculate_probability(time, probability):\n    \"\"\"\n    Calculate the probability of rainfall during Raj's travel time.\n\n    Args:\n    time (int): Time taken for Raj to reach his office (in minutes).\n    probability (float): Probability of rainfall today (0 to 1).\n\n    Returns:\n    float: Probability of rainfall during Raj's travel time, rounded to 4 decimal places.\n    \"\"\"\n    # Calculate the probability of no rainfall during the travel time\n    no_rain_probability = (1 - probability) ** (time / 1440)\n    # Calculate the probability of rainfall during the travel time\n    rain_probability = 1 - no_rain_probability\n    return round(rain_probability, 4)\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Process each test case\nfor _ in range(test_cases):\n    # Read the probability and travel time\n    probability, time = map(float, input().split())\n    # Calculate and print the probability of rainfall during the travel time\n    print(calculate_probability(time, probability))", "import math\n\ndef calculate_rainfall_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on his way to the office.\n\n    Args:\n        p (float): The probability of rainfall today.\n        time (int): The time it takes for Raj to reach his office in minutes.\n\n    Returns:\n        float: The probability of rainfall during the time Raj is on his way to the office.\n    \"\"\"\n    # Calculate the probability of no rainfall during the time\n    no_rain_probability = (1 - p) ** (time / 1440)\n    # Calculate the probability of rainfall during the time\n    rainfall_probability = 1 - no_rain_probability\n    return round(rainfall_probability, 4)\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Process each test case\nfor _ in range(test_cases):\n    # Read the probability of rainfall and time\n    p, time = map(float, input().split())\n    # Calculate and print the probability of rainfall during the time\n    print(calculate_rainfall_probability(p, time))", "import math\n\ndef calculate_rain_probability(test_cases):\n    \"\"\"\n    Calculate the probability of rain during Raj's travel time.\n\n    Args:\n    test_cases (int): Number of test cases.\n\n    Returns:\n    None\n    \"\"\"\n    for _ in range(test_cases):\n        # Read input\n        P, time = map(float, input().split())\n\n        # Calculate probability of rain during Raj's travel time\n        probability = P * (time / 1440)\n\n        # Round result to 4 decimal places\n        probability = round(probability, 4)\n\n        # Print result\n        print(probability)\n\n\n# Get number of test cases\ntest_cases = int(input())\n\n# Process test cases\ncalculate_rain_probability(test_cases)", "import math\n\ndef calculate_probability(rain_probability, time):\n    \"\"\"\n    Calculate the probability of rain during Raj's journey.\n\n    Args:\n    rain_probability (float): The probability of rain today.\n    time (int): The time it takes for Raj to reach his office in minutes.\n\n    Returns:\n    float: The probability of rain during Raj's journey.\n    \"\"\"\n    # Calculate the probability of no rain during Raj's journey\n    no_rain_probability = (1 - rain_probability) ** (time / 1440)\n    # Calculate the probability of rain during Raj's journey\n    rain_probability_journey = 1 - no_rain_probability\n    return round(rain_probability_journey, 4)\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Process each test case\n    for _ in range(num_test_cases):\n        # Read the probability of rain and time\n        rain_probability, time = map(float, input().split())\n        # Calculate and print the probability of rain during Raj's journey\n        print(calculate_probability(rain_probability, time))\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability(probability, time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way to his office.\n\n    Args:\n        probability (float): The probability of rainfalls today.\n        time (int): The time it takes for Raj to reach his office.\n\n    Returns:\n        float: The probability that it rains during the time Raj is on the way.\n    \"\"\"\n    # Calculate the probability of no rain during the time\n    no_rain_probability = (1 - probability) ** (time / 1440)\n    \n    # Calculate the probability of rain during the time\n    rain_probability = 1 - no_rain_probability\n    \n    # Round the result to 4 decimal places\n    return round(rain_probability, 4)\n\n# Read the number of test cases\nnum_test_cases = int(input())\n\n# Read each test case\nfor _ in range(num_test_cases):\n    # Read the probability and time\n    probability, time = map(float, input().split())\n    \n    # Calculate and print the result\n    print(calculate_rainfall_probability(probability, time))", "import math\n\ndef calculate_rainfall_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during a given time frame.\n\n    Parameters:\n    test_cases (list): A list of tuples containing the probability of rain and time.\n\n    Returns:\n    list: A list of tuples containing the probability of rain and time, and the corresponding probability that it rains during the given time frame.\n    \"\"\"\n\n    results = []\n    for p, time in test_cases:\n        # Calculate the probability that it rains during the given time frame\n        rainfall_probability = p * time\n        # Round the result to 4 decimal places\n        rainfall_probability = round(rainfall_probability, 4)\n        results.append((p, time, rainfall_probability))\n\n    return results\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Read the input data\n    test_cases_data = []\n    for _ in range(test_cases):\n        p, time = map(float, input().split())\n        test_cases_data.append((p, time))\n\n    # Calculate and print the results\n    results = calculate_rainfall_probability(test_cases_data)\n    for p, time, rainfall_probability in results:\n        print(f\"{rainfall_probability}\")\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on his way to the office.\n\n    Args:\n    test_cases (list): A list of tuples containing the probability of rain and time.\n\n    Returns:\n    list: A list of probabilities corresponding to each test case.\n    \"\"\"\n    rainfall_probabilities = []\n\n    for probability, time in test_cases:\n        # Calculate the probability that it does not rain during the given time\n        no_rain_probability = (1 - probability) ** (time / 1440)\n        \n        # The probability that it rains is 1 minus the probability that it does not rain\n        rain_probability = 1 - no_rain_probability\n        \n        # Round the result to 4 decimal places\n        rain_probability = round(rain_probability, 4)\n        \n        rainfall_probabilities.append(rain_probability)\n\n    return rainfall_probabilities\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Read the test cases\n    test_cases_data = [tuple(map(float, input().split())) for _ in range(test_cases)]\n\n    # Calculate and print the probabilities\n    probabilities = calculate_rainfall_probability(test_cases_data)\n    for probability in probabilities:\n        print(f\"{probability:.4f}\")\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(probability_of_rain, travel_time):\n    \"\"\"\n    Calculate the probability of rainfall during Raj's travel time.\n\n    Args:\n        probability_of_rain (float): The probability of rainfall today.\n        travel_time (int): The time (in minutes) it will take for Raj to reach his office.\n\n    Returns:\n        float: The probability of rainfall during Raj's travel time.\n    \"\"\"\n    # Calculate the probability of no rainfall during travel time\n    probability_no_rain = (1 - probability_of_rain) ** (travel_time / 1440)\n    \n    # Calculate the probability of rainfall during travel time\n    probability_rain = 1 - probability_no_rain\n    \n    # Return the probability of rainfall during travel time, rounded to 4 decimal places\n    return round(probability_rain, 4)\n\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Process each test case\n    for _ in range(num_test_cases):\n        # Read the probability of rainfall and travel time\n        probability_of_rain, travel_time = map(float, input().split())\n\n        # Calculate and print the probability of rainfall during travel time\n        print(calculate_probability(probability_of_rain, travel_time))\n\n\nif __name__ == \"__main__\":\n    main()", "def calculate_rain_probability(rain_probability, travel_time):\n    \"\"\"\n    Calculate the probability of rain during Raj's commute.\n\n    Args:\n        rain_probability (float): The probability of rain today (between 0 and 0.5).\n        travel_time (int): The time it takes for Raj to reach his office (in minutes).\n\n    Returns:\n        float: The probability of rain during Raj's commute (rounded to 4 decimal places).\n    \"\"\"\n    # Calculate the probability of rain during the commute\n    commute_probability = rain_probability * (travel_time / 1440)\n    \n    # Round the result to 4 decimal places\n    return round(commute_probability, 4)\n\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Process each test case\n    for _ in range(num_test_cases):\n        # Read the rain probability and travel time\n        rain_probability, travel_time = map(float, input().split())\n\n        # Calculate and print the result\n        result = calculate_rain_probability(rain_probability, travel_time)\n        print(result)\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during Raj's commute.\n\n    Args:\n    p (float): Probability of rain today (0-1)\n    time (int): Time it takes for Raj to reach his office (in minutes)\n\n    Returns:\n    float: Probability that it rains during Raj's commute (rounded to 4 decimal places)\n    \"\"\"\n    # Calculate the probability that it does not rain during Raj's commute\n    no_rain_prob = (1 - p) ** (time / 1440)\n    \n    # Calculate the probability that it rains during Raj's commute\n    rain_prob = 1 - no_rain_prob\n    \n    # Round the result to 4 decimal places\n    return round(rain_prob, 4)\n\ndef main():\n    # Get the number of test cases\n    num_test_cases = int(input())\n    \n    # Process each test case\n    for _ in range(num_test_cases):\n        # Get the probability of rain and time\n        p, time = map(float, input().split())\n        \n        # Calculate the probability that it rains during Raj's commute\n        result = calculate_probability(p, time)\n        \n        # Print the result\n        print(result)\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(rainfall_probability, travel_time):\n    \"\"\"\n    Calculate the probability of rain during Raj's travel to the office.\n\n    Args:\n    rainfall_probability (float): Probability of rain in the given time frame.\n    travel_time (int): Time taken for Raj to reach the office in minutes.\n\n    Returns:\n    float: Probability of rain during Raj's travel.\n    \"\"\"\n    # Calculate the probability of no rain in the given time frame\n    no_rain_probability = (1 - rainfall_probability) ** (travel_time / 1440)\n\n    # Calculate the probability of rain during Raj's travel\n    rain_probability = 1 - no_rain_probability\n\n    # Round the result to 4 decimal places\n    rain_probability = round(rain_probability, 4)\n\n    return rain_probability\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Process each test case\nfor _ in range(test_cases):\n    # Read the rainfall probability and travel time\n    rainfall_probability, travel_time = map(float, input().split())\n\n    # Calculate and print the result\n    result = calculate_probability(rainfall_probability, travel_time)\n    print(result)", "import math\n\ndef calculate_probability(p, time):\n    \"\"\"\n    Calculate the probability of rain during Raj's commute.\n\n    Args:\n    p (float): The probability of rain today.\n    time (int): The time it takes for Raj to reach his office in minutes.\n\n    Returns:\n    float: The probability of rain during Raj's commute.\n    \"\"\"\n    # Calculate the probability of no rain during Raj's commute\n    no_rain_probability = (1 - p) ** (time / 1440)\n    # Calculate the probability of rain during Raj's commute\n    rain_probability = 1 - no_rain_probability\n    return round(rain_probability, 4)\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n    # Process each test case\n    for _ in range(test_cases):\n        # Read the probability of rain and time\n        p, time = map(float, input().split())\n        # Calculate and print the probability of rain during Raj's commute\n        print(calculate_probability(p, time))\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rain_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during Raj's commute.\n\n    Args:\n    p (float): Probability of rainfall today.\n    time (int): Time in minutes it takes for Raj to reach his office.\n\n    Returns:\n    float: Probability of rainfall during Raj's commute.\n    \"\"\"\n    # Calculate the probability of no rainfall during Raj's commute\n    no_rain_probability = (1 - p) ** (time / 1440)\n    # Calculate the probability of rainfall during Raj's commute\n    rain_probability = 1 - no_rain_probability\n    # Round the result to 4 decimal places\n    return round(rain_probability, 4)\n\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n    # Process each test case\n    for _ in range(test_cases):\n        # Read the probability of rainfall and time\n        p, time = map(float, input().split())\n        # Calculate and print the probability of rainfall during Raj's commute\n        print(calculate_rain_probability(p, time))\n\n\nif __name__ == \"__main__\":\n    main()", "def calculate_probability(p, time):\n    \"\"\"\n    Calculate the probability of rain during Raj's commute.\n\n    Args:\n    p (float): The probability of rain today.\n    time (int): The time it takes for Raj to reach his office in minutes.\n\n    Returns:\n    float: The probability of rain during Raj's commute.\n    \"\"\"\n    # Calculate the probability of no rain during Raj's commute\n    no_rain_probability = (1 - p) ** (time // 1440)\n    \n    # Calculate the probability of rain during Raj's commute\n    rain_probability = 1 - no_rain_probability\n    \n    # Round the result to 4 decimal places\n    return round(rain_probability, 4)\n\n\ndef main():\n    \"\"\"\n    Main function to handle the test cases.\n    \"\"\"\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Process each test case\n    for _ in range(num_test_cases):\n        # Read the probability of rain and time\n        p, time = map(float, input().split())\n\n        # Calculate and print the probability of rain\n        print(calculate_probability(p, time))\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(rainfall_probability, travel_time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n        rainfall_probability (float): The probability of rainfall today.\n        travel_time (int): The time it takes for Raj to reach his office.\n\n    Returns:\n        float: The probability that it rains during the travel time.\n    \"\"\"\n    # Calculate the probability of no rainfall during the travel time\n    no_rain_probability = (1 - rainfall_probability) ** (travel_time / 1440)\n    \n    # Calculate the probability of rainfall during the travel time\n    rainfall_probability = 1 - no_rain_probability\n    \n    # Round the result to 4 decimal places\n    return round(rainfall_probability, 4)\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Process each test case\nfor _ in range(test_cases):\n    # Read the rainfall probability and travel time\n    rainfall_probability, travel_time = map(float, input().split())\n    \n    # Calculate the probability of rainfall during the travel time\n    probability = calculate_probability(rainfall_probability, travel_time)\n    \n    # Print the result\n    print(probability)", "import math\n\ndef calculate_rain_probability(probability, time):\n    \"\"\"\n    Calculate the probability that it rains during the time.\n\n    Args:\n    probability (float): The probability of rain.\n    time (int): The time taken to reach the office.\n\n    Returns:\n    float: The probability that it rains during the time.\n    \"\"\"\n    # Calculate the probability that it does not rain during the time\n    no_rain_probability = 1 - probability\n    \n    # Calculate the probability that it rains during the time using the formula for exponential distribution\n    rain_probability = (1 - math.exp(-probability * time))\n    \n    # Return the probability that it rains during the time\n    return rain_probability\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Iterate over each test case\nfor _ in range(test_cases):\n    # Read the probability and time for the current test case\n    probability, time = map(float, input().split())\n    \n    # Calculate and print the probability that it rains during the time\n    print(f\"{calculate_rain_probability(probability, time):.4f}\")", "import math\n\ndef calculate_probability(time, probability):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes to reach the office.\n\n    Args:\n        time (float): The time it takes to reach the office in minutes.\n        probability (float): The probability that it will rain today.\n\n    Returns:\n        float: The probability that it rains during the time it takes to reach the office.\n    \"\"\"\n    # Calculate the probability that it rains during the time it takes to reach the office\n    # This is equivalent to 1 - (1 - probability)^(time/1440)\n    # Since the time is a perfect divisor of 1440, we can use the property of uniform distribution\n    # The probability is uniform over the interval [0, time]\n    return 1 - (1 - probability) ** (time / 1440)\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Process each test case\n    for _ in range(num_test_cases):\n        # Read the probability and time\n        probability, time = map(float, input().split())\n\n        # Calculate and print the result\n        print(round(calculate_probability(time, probability), 4))\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rain_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes for Raj to reach his office.\n\n    Args:\n        test_cases (list): A list of tuples containing the probability of rain (P) and time (in minutes).\n\n    Returns:\n        list: A list of probabilities that it rains during the time it takes for Raj to reach his office.\n    \"\"\"\n\n    # Initialize an empty list to store the results\n    results = []\n\n    # Iterate over each test case\n    for P, time in test_cases:\n        # Calculate the probability that it rains during the time it takes for Raj to reach his office\n        # This is done by multiplying the probability of rain (P) with the ratio of time (t) to the total number of minutes in a day (1440)\n        result = P * (time / 1440)\n        \n        # Round the result to 4 decimal places\n        result = round(result, 4)\n\n        # Append the result to the list\n        results.append(result)\n\n    # Return the list of results\n    return results\n\n\n# Read the number of test cases\nnum_test_cases = int(input())\n\n# Read the test cases\ntest_cases = []\nfor _ in range(num_test_cases):\n    P, time = map(float, input().split())\n    test_cases.append((P, time))\n\n# Calculate and print the results\nresults = calculate_rain_probability(test_cases)\nfor result in results:\n    print(result)", "import math\n\ndef calculate_rain_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes to reach the office.\n\n    Args:\n    p (float): The probability of rainfalls today.\n    time (int): The time (in minutes) it will take to reach the office.\n\n    Returns:\n    float: The probability that it rains during the time it takes to reach the office.\n    \"\"\"\n    # If p is 1 or greater, it means it will always rain, so return 1\n    if p >= 1:\n        return 1\n\n    # If p is 0 and time is 0, it means it will never rain, so return 0\n    if p == 0 and time == 0:\n        return 0\n\n    # Calculate the probability that it does not rain during the time it takes to reach the office\n    no_rain_probability = (1 - p) ** (time / 1440)\n\n    # Calculate the probability that it rains during the time it takes to reach the office\n    rain_probability = 1 - no_rain_probability\n\n    # Return the probability rounded to 4 decimal places\n    return round(rain_probability, 4)\n\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Process each test case\nfor _ in range(test_cases):\n    # Read the probability and time for the current test case\n    p, time = map(float, input().split())\n\n    # Calculate and print the probability that it rains during the time it takes to reach the office\n    print(calculate_rain_probability(p, time))", "def calculate_rain_probability(T, P, time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n        T (int): The number of test cases.\n        P (float): The probability of rainfall today.\n        time (int): The time it takes for Raj to reach his office.\n\n    Returns:\n        float: The probability that it rains during the time Raj is on the way.\n    \"\"\"\n    # Calculate the probability that it does not rain during the time Raj is on the way\n    no_rain_probability = (1 - P) ** (time / 1440)\n    \n    # Calculate the probability that it rains during the time Raj is on the way\n    rain_probability = 1 - no_rain_probability\n    \n    # Round the result to 4 decimal places\n    rain_probability = round(rain_probability, 4)\n    \n    return rain_probability\n\n\n# Read the number of test cases\nT = int(input())\n\n# Process each test case\nfor _ in range(T):\n    # Read the probability of rainfall and time\n    P, time = input().split()\n    P = float(P)\n    time = int(time)\n\n    # Calculate and print the probability\n    print(calculate_rain_probability(T, P, time))", "import math\n\ndef calculate_rainfall_probability(probability, time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way to his office.\n\n    Args:\n        probability (float): The probability of rainfall today.\n        time (int): The time it takes for Raj to reach his office in minutes.\n\n    Returns:\n        float: The probability that it rains during the time Raj is on the way to his office.\n    \"\"\"\n    # Calculate the probability of no rainfall during the time Raj is on the way\n    no_rainfall_probability = (1 - probability) ** (time / 1440)\n    \n    # Calculate the probability that it rains during the time Raj is on the way\n    rainfall_probability = 1 - no_rainfall_probability\n    \n    # Return the result rounded to 4 decimal places\n    return round(rainfall_probability, 4)\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n    \n    # Process each test case\n    for _ in range(num_test_cases):\n        # Read the probability of rainfall and time\n        probability, time = map(float, input().split())\n        \n        # Calculate and print the rainfall probability\n        print(calculate_rainfall_probability(probability, time))\n\nif __name__ == \"__main__\":\n    main()", "def calculate_probability(rainfall_probability, time):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes to reach the office.\n\n    Args:\n        rainfall_probability (float): The probability of rainfall.\n        time (int): The time it takes to reach the office in minutes.\n\n    Returns:\n        float: The probability that it rains during the time it takes to reach the office.\n    \"\"\"\n    # If the time is 0, the probability is 0\n    if time == 0:\n        return 0\n    # If the probability of rainfall is 0, the probability of no rainfall is 1\n    elif rainfall_probability == 0:\n        return 1\n    # If the probability of rainfall is 1, the probability of no rainfall is 0\n    elif rainfall_probability == 1:\n        return 0\n    # If the probability of rainfall is 0.5, the probability of no rainfall is 0.5\n    elif rainfall_probability == 0.5:\n        return 0.5\n    # For other probabilities, calculate the probability of no rainfall\n    else:\n        return (1 - rainfall_probability) ** time\n\n\ndef main():\n    # Get the number of test cases\n    num_test_cases = int(input())\n\n    # Process each test case\n    for _ in range(num_test_cases):\n        # Get the probability of rainfall and time\n        rainfall_probability, time = map(float, input().split())\n\n        # Calculate and print the probability\n        print(f\"{calculate_probability(rainfall_probability, time):.4f}\")\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time.\n\n    Args:\n    p (float): The probability of rain today.\n    time (int): The time taken to reach the office in minutes.\n\n    Returns:\n    float: The probability that it rains during the time.\n    \"\"\"\n    # Calculate the probability that it doesn't rain during the time\n    no_rain_probability = (1 - p) ** (time // 1440)\n    \n    # The probability that it rains during the time is 1 minus the probability that it doesn't rain during the time\n    rain_probability = 1 - no_rain_probability\n    \n    # Round the answer to 4 decimal places\n    return round(rain_probability, 4)\n\n\ndef main():\n    # Read the number of test cases\n    t = int(input())\n\n    # Process each test case\n    for _ in range(t):\n        # Read the probability of rain and time taken\n        p, time = map(float, input().split())\n\n        # Calculate and print the probability that it rains during the time\n        print(calculate_probability(p, time))\n\n\nif __name__ == \"__main__\":\n    main()", "def calculate_probability_of_rain(p, time):\n    \"\"\"\n    Calculate the probability of rain during a given time.\n\n    Args:\n        p (float): The probability of rain today.\n        time (int): The time it takes to reach the office.\n\n    Returns:\n        float: The probability of rain during the given time.\n    \"\"\"\n    # Calculate the probability of no rain\n    no_rain_prob = (1 - p) ** (time // 1440)\n    \n    # Calculate the probability of rain during the given time\n    rain_prob = 1 - no_rain_prob\n    \n    # Return the result rounded to 4 decimal places\n    return round(rain_prob, 4)\n\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Process each test case\n    for _ in range(test_cases):\n        # Read the probability of rain and time\n        p, time = map(float, input().split())\n\n        # Calculate and print the result\n        print(calculate_probability_of_rain(p, time))\n\n\nif __name__ == \"__main__\":\n    main()", "def calculate_probability(rainfall_probability, commute_time):\n    \"\"\"\n    Calculate the probability that it rains during the commute.\n\n    Args:\n        rainfall_probability (float): The probability of rain (0-1)\n        commute_time (int): The time of the commute (in minutes)\n\n    Returns:\n        float: The probability that it rains during the commute\n    \"\"\"\n    # Calculate the probability that it does not rain during the commute\n    no_rain_probability = 1 - rainfall_probability\n    \n    # Calculate the probability that it rains during the commute\n    rain_probability = commute_time / 1440 * rainfall_probability\n    \n    # Return the result rounded to 4 decimal places\n    return round(rain_probability, 4)\n\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Iterate over each test case\n    for _ in range(test_cases):\n        # Read the rainfall probability and commute time\n        rainfall_probability, commute_time = map(float, input().split())\n\n        # Calculate and print the result\n        result = calculate_probability(rainfall_probability, commute_time)\n        print(result)\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes for Raj to reach his office.\n\n    Args:\n        test_cases (list): A list of tuples containing the probability of rain (P) and time (in minutes) to reach the office.\n\n    Returns:\n        list: A list of probabilities that it rains during the time it takes for Raj to reach his office.\n    \"\"\"\n    rainfall_probabilities = []\n    for P, time in test_cases:\n        # Calculate the probability that it rains during the time it takes for Raj to reach his office\n        rainfall_probability = P * (1 - math.exp(-P * time / 1440))\n        rainfall_probabilities.append(round(rainfall_probability, 4))\n\n    return rainfall_probabilities\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Read the test cases\n    test_cases_data = []\n    for _ in range(test_cases):\n        P, time = map(float, input().split())\n        test_cases_data.append((P, time))\n\n    # Calculate and print the rainfall probabilities\n    rainfall_probabilities = calculate_rainfall_probability(test_cases_data)\n    for probability in rainfall_probabilities:\n        print(f\"{probability}\")\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during a specified time frame.\n\n    Args:\n    p (float): Daily rainfall probability.\n    time (int): Time (in minutes) it takes to reach the office.\n\n    Returns:\n    float: Probability that it rains during the specified time frame.\n    \"\"\"\n    # Calculate the probability of no rain during the specified time frame\n    no_rain_probability = (1 - p) ** (time / 1440)\n    \n    # Calculate the probability that it rains during the specified time frame\n    rain_probability = 1 - no_rain_probability\n    \n    # Round the result to 4 decimal places\n    return round(rain_probability, 4)\n\n# Read the number of test cases\nnum_test_cases = int(input())\n\n# Process each test case\nfor _ in range(num_test_cases):\n    # Read the daily rainfall probability and time\n    p, time = map(float, input().split())\n    \n    # Calculate and print the rainfall probability\n    print(calculate_rainfall_probability(p, time))", "import math\n\ndef calculate_probability(time, probability):\n    \"\"\"\n    Calculate the probability that it rains during the given time.\n\n    Args:\n    time (int): Time in minutes.\n    probability (float): Probability of rainfalls today.\n\n    Returns:\n    float: Probability that it rains during the given time.\n    \"\"\"\n    # Calculate the probability that it does not rain during the given time\n    no_rain_probability = (1 - probability) ** (time / 1440)\n    # Calculate the probability that it rains during the given time\n    rain_probability = 1 - no_rain_probability\n    return round(rain_probability, 4)\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n    # Iterate over each test case\n    for _ in range(test_cases):\n        # Read the probability and time\n        probability, time = map(float, input().split())\n        # Calculate and print the result\n        print(calculate_probability(time, probability))\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during Raj's travel time.\n\n    Args:\n        p (float): Probability of rainfalls today.\n        time (int): Time (in minutes) it will take for Raj to reach his office.\n\n    Returns:\n        float: Probability that it rains during Raj's travel time.\n    \"\"\"\n    # Calculate the probability that it rains during Raj's travel time\n    # This is done by multiplying the probability of rainfalls today with the ratio of time to 1440\n    probability = p * (time / 1440)\n    \n    # Return the calculated probability\n    return probability\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Process each test case\nfor _ in range(test_cases):\n    # Read the probability of rainfalls today and time\n    p, time = map(float, input().split())\n\n    # Calculate the probability that it rains during Raj's travel time\n    probability = calculate_probability(p, time)\n\n    # Round the probability to 4 decimal places\n    probability = round(probability, 4)\n\n    # Print the result\n    print(probability)", "import math\n\ndef calculate_rain_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes for Raj to reach his office.\n    \n    Args:\n        p (float): The probability that it will rain today.\n        time (int): The time it takes for Raj to reach his office in minutes.\n    \n    Returns:\n        float: The probability that it rains during the time it takes for Raj to reach his office.\n    \"\"\"\n    # Calculate the probability that it rains during the time it takes for Raj to reach his office\n    # This is done by multiplying the probability of rain by the ratio of the time it rains to the total time\n    rain_probability = p * (time / 1440)\n    \n    # Return the result rounded to 4 decimal places\n    return round(rain_probability, 4)\n\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Process each test case\nfor _ in range(test_cases):\n    # Read the probability of rain and time\n    p, time = map(float, input().split())\n    \n    # Calculate and print the result\n    print(calculate_rain_probability(p, time))", "import math\n\ndef calculate_rainfall_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n        test_cases (list): A list of tuples containing the probability `P` and travel time `time`.\n\n    Returns:\n        list: A list of probabilities rounded to 4 decimal places.\n    \"\"\"\n    probabilities = []\n    for p, time in test_cases:\n        # Calculate the rainfall probability\n        rainfall_probability = p * (1 - (1 - p) ** (time // 1440))\n\n        # Round the result to 4 decimal places\n        result = round(rainfall_probability, 4)\n\n        # Ensure the result is not zero\n        if result == 0:\n            result = 0.0000\n\n        probabilities.append(result)\n\n    return probabilities\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Read the test cases\n    test_cases = []\n    for _ in range(num_test_cases):\n        p, time = map(float, input().split())\n        test_cases.append((p, time))\n\n    # Calculate and print the results\n    probabilities = calculate_rainfall_probability(test_cases)\n    for probability in probabilities:\n        print(probability)\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability(probability, time):\n    \"\"\"\n    Calculate the probability of rainfall during Raj's travel time.\n\n    Args:\n    probability (float): Probability of rainfall today (0-0.5)\n    time (int): Time it takes to reach office (10-720 minutes)\n\n    Returns:\n    float: Probability of rainfall during travel time (rounded to 4 decimal places)\n    \"\"\"\n    # Calculate the probability of no rainfall during travel time\n    no_rainfall_probability = (1 - probability) ** (time / 1440)\n    \n    # Calculate the probability of rainfall during travel time\n    rainfall_probability = 1 - no_rainfall_probability\n    \n    # Round the result to 4 decimal places\n    return round(rainfall_probability, 4)\n\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Process each test case\nfor _ in range(test_cases):\n    # Read the probability of rainfall and travel time\n    probability, time = map(float, input().split())\n    \n    # Calculate and print the probability of rainfall during travel time\n    print(calculate_rainfall_probability(probability, time))", "import math\n\ndef calculate_probability():\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Loop through each test case\n    for _ in range(num_test_cases):\n        # Read the probability of rain and time\n        probability, time = map(float, input().split())\n\n        # Calculate the probability that it rains during the time\n        probability_rains = probability * (1 - (1 - probability) ** (1440 / time))\n\n        # Print the result, rounded to 4 decimal places\n        print(f\"{probability_rains:.4f}\")\n\n# Call the function to start the program\ncalculate_probability()", "import math\n\ndef calculate_rainfall_probability(time, probability):\n    \"\"\"\n    Calculate the probability that it rains during the given time.\n\n    Args:\n        time (int): Time in minutes it will take for Raj to reach his office.\n        probability (float): Probability of rain today.\n\n    Returns:\n        float: Probability of rain during the given time.\n    \"\"\"\n    # Calculate the probability of no rain during the given time\n    no_rain_probability = (1 - probability) ** (time / 1440)\n    # Calculate the probability of rain during the given time\n    rain_probability = 1 - no_rain_probability\n    return round(rain_probability, 4)\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Process each test case\nfor _ in range(test_cases):\n    # Read the probability of rain and time\n    probability, time = map(float, input().split())\n    # Calculate and print the probability of rain during the given time\n    print(calculate_rainfall_probability(time, probability))", "import math\n\ndef calculate_rainfall_probability():\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way to his office.\n    \n    Parameters:\n    p (float): Probability of rainfall today\n    time (int): Time taken to reach the office in minutes\n    \n    Returns:\n    float: Probability that it rains during the time Raj is on the way to his office\n    \"\"\"\n    # Calculate the total number of minutes in a day\n    total_minutes = 1440\n    \n    # Calculate the probability of rainfall during the time Raj is on the way\n    rainfall_probability = p * (total_minutes / time)\n    \n    # Round the result to 4 decimal places\n    rainfall_probability = round(rainfall_probability, 4)\n    \n    return rainfall_probability\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n    \n    # Process each test case\n    for _ in range(num_test_cases):\n        # Read the probability of rainfall and time\n        p, time = map(float, input().split())\n        \n        # Calculate and print the rainfall probability\n        print(calculate_rainfall_probability())\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(probability, time):\n    \"\"\"\n    Calculate the probability that it rains during the given time.\n\n    Args:\n    - probability (float): The probability of rainfall today.\n    - time (int): The time it takes to reach the office in minutes.\n\n    Returns:\n    - float: The probability that it rains during the given time.\n    \"\"\"\n    # Calculate the time interval within which rainfall is possible\n    interval = 1440 / time\n\n    # Calculate the probability that it rains during the given time\n    result = probability * interval\n\n    return round(result, 4)\n\ndef main():\n    # Get the number of test cases\n    test_cases = int(input())\n\n    # Process each test case\n    for _ in range(test_cases):\n        # Get the probability of rainfall and time\n        probability, time = map(float, input().split())\n\n        # Calculate and print the result\n        result = calculate_probability(probability, time)\n        print(result)\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rain_probability(probability, time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n    probability (float): The probability that it will rain today.\n    time (int): The time (in minutes) it will take for Raj to reach his office.\n\n    Returns:\n    float: The probability that it rains during the time Raj is on the way.\n    \"\"\"\n    # Calculate the probability that it rains during the time Raj is on the way\n    # This is the probability that it rains at any given minute, multiplied by the number of minutes\n    return probability * (time / 1440)\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Read each test case\n    for _ in range(test_cases):\n        # Read the probability and time\n        probability, time = map(float, input().split())\n\n        # Calculate and print the result\n        result = calculate_rain_probability(probability, time)\n        print(f\"{result:.4f}\")\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(rainfall_probability, travel_time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n    \n    Args:\n    rainfall_probability (float): The probability that it will rain today.\n    travel_time (int): The time (in minutes) it will take for Raj to reach his office.\n    \n    Returns:\n    float: The probability that it rains during the time Raj is on the way.\n    \"\"\"\n    # Calculate the time for which we need to calculate the probability of rain\n    time_to_calculate = travel_time / 1440.0\n    \n    # Calculate the probability of rain during the time we are calculating\n    probability_of_rain = rainfall_probability * time_to_calculate\n    \n    # Round the result to 4 decimal places\n    return round(probability_of_rain, 4)\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Read each test case\nfor _ in range(test_cases):\n    # Read the probability of rain and travel time\n    rainfall_probability, travel_time = map(float, input().split())\n    \n    # Calculate the probability that it rains during the time Raj is on the way\n    probability_of_rain = calculate_probability(rainfall_probability, travel_time)\n    \n    # Print the result\n    print(probability_of_rain)", "def calculate_rain_probability(probability, time):\n    \"\"\"\n    Calculate the probability that it rains during the given time.\n\n    Args:\n        probability (float): The probability of rain.\n        time (int): The time in minutes.\n\n    Returns:\n        float: The probability of rain during the given time.\n    \"\"\"\n    return round(probability * time, 4)\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Process each test case\n    for _ in range(test_cases):\n        # Read the probability of rain and time\n        probability, time = map(float, input().split())\n\n        # Calculate and print the result\n        result = calculate_rain_probability(probability, time)\n        print(result)\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on his way to the office.\n\n    Args:\n        test_cases (list): A list of tuples containing the probability of rain (P) and time (in minutes)\n\n    Returns:\n        list: A list of probabilities that it rains during the time Raj is on his way to the office\n    \"\"\"\n    results = []\n    for p, time in test_cases:\n        # Calculate the probability of rain during the time Raj is on his way to the office\n        # Assuming the probability of rain is a constant probability per minute\n        probability = p * (time / 1440)\n        results.append(round(probability, 4))\n    return results\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Read the test cases\n    test_cases_data = []\n    for _ in range(test_cases):\n        p, time = map(float, input().split())\n        test_cases_data.append((p, time))\n\n    # Calculate the probability of rain during the time Raj is on his way to the office\n    results = calculate_rainfall_probability(test_cases_data)\n\n    # Print the results\n    for result in results:\n        print(result)\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rain_probability():\n    # Get the number of test cases\n    test_cases = int(input())\n\n    # Loop through each test case\n    for _ in range(test_cases):\n        # Get the probability of rain and time\n        probability, time = map(float, input().split())\n\n        # Calculate the probability of rain during the time\n        probability_rain = probability * (time / 1440)\n\n        # Round the result to 4 decimal places\n        probability_rain = round(probability_rain, 4)\n\n        # Print the result\n        print(probability_rain)\n\n# Call the function\ncalculate_rain_probability()", "def calculate_rain_probability(test_cases):\n    \"\"\"\n    Calculate the probability of rain during the time Raj is on the way to the office.\n\n    Args:\n        test_cases (list): A list of tuples containing the probability of rain `P` and the time `time`.\n\n    Returns:\n        list: A list of probabilities of rain during the time Raj is on the way.\n    \"\"\"\n    result = []\n    for P, time in test_cases:\n        # Calculate the fraction of the total time that Raj spends on the way\n        time_fraction = time / 1440\n        \n        # Calculate the probability of rain during the time Raj is on the way\n        rain_probability = P * time_fraction\n        \n        # Round the result to 4 decimal places\n        result.append(round(rain_probability, 4))\n    \n    return result\n\n# Read the number of test cases\nnum_test_cases = int(input())\n\n# Read the test cases\ntest_cases = []\nfor _ in range(num_test_cases):\n    P, time = map(float, input().split())\n    test_cases.append((P, time))\n\n# Calculate and print the results\nresults = calculate_rain_probability(test_cases)\nfor result in results:\n    print(result)", "import math\n\ndef calculate_rainfall_probability(probability, time):\n    \"\"\"\n    Calculate the probability that it rains during a given time frame.\n\n    Args:\n        probability (float): The overall probability of rain.\n        time (int): The duration of the time frame in minutes.\n\n    Returns:\n        float: The probability that it rains during the given time frame.\n    \"\"\"\n    # Calculate the probability that it does not rain during the given time frame\n    no_rain_probability = (1 - probability) ** (time / 1440)\n    \n    # Calculate the probability that it rains during the given time frame\n    rainfall_probability = 1 - no_rain_probability\n    \n    # Round the result to 4 decimal places\n    rainfall_probability = round(rainfall_probability, 4)\n    \n    return rainfall_probability\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n    \n    # Process each test case\n    for _ in range(test_cases):\n        # Read the probability and time\n        probability, time = map(float, input().split())\n        \n        # Calculate and print the rainfall probability\n        print(calculate_rainfall_probability(probability, time))\n\nif __name__ == \"__main__\":\n    main()", "import math\n\n# Function to calculate the probability that it rains during a certain time\ndef rain_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during a certain time.\n\n    Args:\n    p (float): The probability of rain.\n    time (int): The time in minutes.\n\n    Returns:\n    float: The probability that it rains during the given time.\n    \"\"\"\n    # Calculate the probability that it does not rain\n    no_rain_prob = 1 - p\n\n    # Calculate the probability that it rains at least once during the given time\n    # Using the formula for the probability of at least one event occurring in a time period\n    rain_prob = 1 - math.pow(1 - no_rain_prob * time / 1440, 1440 / time)\n\n    # Round the result to 4 decimal places\n    return round(rain_prob, 4)\n\n\n# Main function to handle the test cases\ndef main():\n    \"\"\"\n    Handle the test cases.\n    \"\"\"\n    # Read the number of test cases\n    t = int(input())\n\n    # Process each test case\n    for _ in range(t):\n        # Read the probability of rain and the time\n        p, time = map(float, input().split())\n\n        # Calculate and print the probability that it rains during the given time\n        print(rain_probability(p, time))\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(rainfall_probability, travel_time):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes to travel.\n\n    Args:\n    rainfall_probability (float): The probability that it will rain today.\n    travel_time (int): The time it takes to travel to the office in minutes.\n\n    Returns:\n    float: The probability that it rains during the time it takes to travel.\n    \"\"\"\n    # Calculate the probability that it rains during the travel time\n    probability = rainfall_probability * (travel_time / 1440)\n    return round(probability, 4)\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Process each test case\nfor _ in range(test_cases):\n    # Read the rainfall probability and travel time\n    rainfall_probability, travel_time = map(float, input().split())\n\n    # Calculate and print the probability\n    print(calculate_probability(rainfall_probability, travel_time))", "import math\n\ndef calculate_rainfall_probability(test_cases):\n    \"\"\"\n    Calculate the probability of rainfall during Raj's commute.\n\n    Args:\n        test_cases (list): A list of tuples containing the probability of rainfall and commute time.\n\n    Returns:\n        list: A list of probabilities rounded to 4 decimal places.\n    \"\"\"\n    rainfall_probabilities = []\n\n    for probability, time in test_cases:\n        # Convert probability to a decimal\n        probability = float(probability)\n\n        # Calculate the probability of no rainfall during the commute\n        no_rainfall_probability = (1 - probability) ** (time / 1440)\n\n        # Calculate the probability of rainfall during the commute\n        rainfall_probability = 1 - no_rainfall_probability\n\n        # Round the result to 4 decimal places\n        rainfall_probability = round(rainfall_probability, 4)\n\n        rainfall_probabilities.append(rainfall_probability)\n\n    return rainfall_probabilities\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Read the test cases\n    test_cases_data = []\n    for _ in range(test_cases):\n        probability, time = input().split()\n        test_cases_data.append((probability, int(time)))\n\n    # Calculate and print the probabilities\n    probabilities = calculate_rainfall_probability(test_cases_data)\n    for probability in probabilities:\n        print(probability)\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(rain_probability, travel_time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way to his office.\n\n    Args:\n        rain_probability (float): The probability that it will rain today.\n        travel_time (int): The time it takes for Raj to reach his office.\n\n    Returns:\n        float: The probability that it rains during the time Raj is on the way.\n    \"\"\"\n    return rain_probability * (travel_time / 1440)\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Process each test case\n    for _ in range(test_cases):\n        # Read the probability of rain and travel time\n        rain_probability, travel_time = map(float, input().split())\n\n        # Calculate the probability that it rains during the travel time\n        probability = calculate_probability(rain_probability, travel_time)\n\n        # Round the result to 4 decimal places\n        probability = round(probability, 4)\n\n        # Print the result\n        print(probability)\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(time, probability):\n    \"\"\"\n    Calculate the probability of rain during the given time.\n\n    Args:\n    time (int): Time taken to reach the office in minutes.\n    probability (float): Probability of rain.\n\n    Returns:\n    float: Probability of rain during the given time.\n    \"\"\"\n    # Calculate the number of minutes in a day\n    minutes_in_a_day = 1440\n\n    # Calculate the number of minutes in a day that are after the given time\n    minutes_after_time = minutes_in_a_day - time\n\n    # Calculate the probability of rain during the given time\n    probability_after_time = 1 - probability\n    probability_during_time = probability_after_time * (minutes_after_time / minutes_in_a_day)\n\n    return round(probability_during_time, 4)\n\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Process each test case\nfor _ in range(test_cases):\n    # Read the probability of rain and the time taken to reach the office\n    probability, time = map(float, input().split())\n\n    # Calculate and print the probability of rain during the given time\n    print(calculate_probability(time, probability))", "import math\n\ndef calculate_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n    p (float): The probability that it will rain today.\n    time (int): The time it takes for Raj to reach his office in minutes.\n\n    Returns:\n    float: The probability that it rains during the time Raj is on the way.\n    \"\"\"\n    # Calculate the number of minutes in a day\n    total_minutes_in_a_day = 1440\n\n    # Calculate the probability that it will not rain during the time Raj is on the way\n    probability_not_raining = (1 - p) ** (time / total_minutes_in_a_day)\n\n    # Calculate the probability that it rains during the time Raj is on the way\n    probability_raining = 1 - probability_not_raining\n\n    # Round the result to 4 decimal places\n    probability_raining = round(probability_raining, 4)\n\n    return probability_raining\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Process each test case\nfor _ in range(test_cases):\n    # Read the probability and time\n    p, time = map(float, input().split())\n\n    # Calculate and print the result\n    result = calculate_probability(p, time)\n    print(result)", "import math\n\ndef calculate_rainfall_probability(probability, time):\n    \"\"\"\n    Calculate the probability that it rains during a specified time.\n\n    Args:\n        probability (float): The probability of rain (0-1).\n        time (int): The time in minutes.\n\n    Returns:\n        float: The probability of rain during the specified time.\n    \"\"\"\n    # Calculate the probability of no rain during the specified time\n    no_rain_probability = (1 - probability) ** (time / 1440)\n    \n    # Calculate the probability of rain during the specified time\n    rain_probability = 1 - no_rain_probability\n    \n    # Round the result to 4 decimal places\n    return round(rain_probability, 4)\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Process each test case\n    for _ in range(num_test_cases):\n        # Read the probability and time\n        probability, time = map(float, input().split())\n\n        # Calculate and print the rainfall probability\n        print(calculate_rainfall_probability(probability, time))\n\nif __name__ == \"__main__\":\n    main()", "def rainfall_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes for Raj to reach his office.\n\n    Args:\n    p (float): The probability that it will rain today.\n    time (int): The time (in minutes) it takes for Raj to reach his office.\n\n    Returns:\n    float: The probability that it rains during the time it takes for Raj to reach his office.\n    \"\"\"\n    # Calculate the probability that it will not rain\n    prob_no_rain = 1 - p\n\n    # Calculate the probability that it rains during the time it takes for Raj to reach his office\n    prob_rain = 1 - (prob_no_rain ** (time // 1440))\n\n    return round(prob_rain, 4)\n\n\ndef main():\n    # Read the number of test cases\n    t = int(input())\n\n    # Process each test case\n    for _ in range(t):\n        # Read the probability of rain and time\n        p, time = map(float, input().split())\n\n        # Calculate and print the probability that it rains during the time it takes for Raj to reach his office\n        print(rainfall_probability(p, time))\n\n\nif __name__ == \"__main__\":\n    main()", "def calculate_probability(p, time):\n    \"\"\"\n    Calculate the probability of rain during Raj's journey.\n\n    Args:\n    p (float): The probability of rain today.\n    time (int): The time it will take for Raj to reach his office.\n\n    Returns:\n    float: The probability of rain during Raj's journey.\n    \"\"\"\n    # Calculate the probability of no rain during Raj's journey\n    no_rain_prob = (1 - p) ** (time / 1440)\n    # Calculate the probability of rain during Raj's journey\n    rain_prob = 1 - no_rain_prob\n    # Round the result to 4 decimal places\n    return round(rain_prob, 4)\n\n\ndef main():\n    # Read the number of test cases\n    t = int(input())\n    for _ in range(t):\n        # Read the probability of rain and time\n        p, time = map(float, input().split())\n        # Calculate and print the result\n        result = calculate_probability(p, time)\n        print(result)\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rain_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n    p (float): The probability of rain today.\n    time (int): The time it takes for Raj to reach his office.\n\n    Returns:\n    float: The probability that it rains during the time Raj is on the way.\n    \"\"\"\n    # Calculate the probability of no rain during the time Raj is on the way\n    no_rain_probability = (1 - p) ** (time / 1440)\n    \n    # Calculate the probability of rain during the time Raj is on the way\n    rain_probability = 1 - no_rain_probability\n    \n    # Round the result to 4 decimal places\n    return round(rain_probability, 4)\n\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Process each test case\n    for _ in range(num_test_cases):\n        # Read the probability of rain and time\n        p, time = map(float, input().split())\n\n        # Calculate and print the probability of rain\n        print(calculate_rain_probability(p, time))\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the travel time.\n\n    Args:\n        p (float): Probability of rain today.\n        time (int): Time taken to reach the office (in minutes).\n\n    Returns:\n        float: Probability of rain during travel time, rounded to 4 decimal places.\n    \"\"\"\n    # Calculate the probability of no rain during the travel time\n    no_rain_probability = (1 - p) ** (time / 1440)\n    \n    # Calculate the probability of rain during the travel time\n    rain_probability = 1 - no_rain_probability\n    \n    # Round the result to 4 decimal places\n    return round(rain_probability, 4)\n\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Process each test case\n    for _ in range(num_test_cases):\n        # Read the probability of rain and travel time\n        p, time = map(float, input().split())\n\n        # Calculate and print the probability of rain during travel time\n        print(calculate_probability(p, time))\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability(test_cases):\n    \"\"\"\n    Calculate the probability of rainfall during travel time.\n\n    Args:\n    test_cases (list): A list of tuples containing the probability of rainfall `P` and the travel time `time`.\n\n    Returns:\n    list: A list of probabilities of rainfall during travel time.\n    \"\"\"\n    probabilities = []\n    for P, time in test_cases:\n        # Calculate the probability of rainfall during travel time\n        probability = P * (1 - (1 - P) ** (1440 / time))\n        probabilities.append(round(probability, 4))\n    return probabilities\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Read the test cases\n    test_cases_list = [tuple(map(float, input().split())) for _ in range(test_cases)]\n\n    # Calculate and print the probabilities\n    probabilities = calculate_rainfall_probability(test_cases_list)\n    for probability in probabilities:\n        print(probability)\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability(P, time):\n    \"\"\"\n    Calculate the probability of rainfall during the travel time.\n\n    Args:\n    P (float): The probability of rainfall (0.0 to 0.5).\n    time (int): The travel time in minutes (10 to 720).\n\n    Returns:\n    float: The probability of rainfall during the travel time, rounded to 4 decimal places.\n    \"\"\"\n    # Calculate the probability of no rainfall during the travel time\n    no_rainfall_prob = (1 - P) ** (time / 1440)\n    # Calculate the probability of rainfall during the travel time\n    rainfall_prob = 1 - no_rainfall_prob\n    return round(rainfall_prob, 4)\n\n\ndef main():\n    # Read the number of test cases\n    T = int(input())\n\n    # Process each test case\n    for _ in range(T):\n        # Read the probability of rainfall and travel time\n        P, time = map(float, input().split())\n\n        # Calculate and print the probability of rainfall during the travel time\n        print(calculate_rainfall_probability(P, time))\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n    p (float): The probability that it will rain today.\n    time (int): The time it will take for Raj to reach his office.\n\n    Returns:\n    float: The probability that it rains during the time Raj is on the way.\n    \"\"\"\n    # Calculate the probability that it will not rain during the time\n    no_rain_probability = (1 - p) ** (time / 1440)\n    \n    # Calculate the probability that it will rain during the time\n    rain_probability = 1 - no_rain_probability\n    \n    return round(rain_probability, 4)\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Process each test case\nfor _ in range(test_cases):\n    # Read the probability and time for the current test case\n    p, time = map(float, input().split())\n    \n    # Calculate and print the probability\n    print(calculate_probability(p, time))", "import math\n\ndef calculate_rainfall_probability(test_cases):\n    \"\"\"\n    Calculate the probability of rainfall during the time it takes Raj to reach his office.\n\n    Args:\n        test_cases (list): A list of tuples containing probability and time.\n\n    Returns:\n        list: A list of probabilities of rainfall during the time it takes Raj to reach his office.\n    \"\"\"\n    result = []\n    for probability, time in test_cases:\n        # Calculate the probability of no rainfall during the time\n        no_rainfall_probability = (1 - probability) ** (time / 1440)\n        \n        # Calculate the probability of rainfall during the time\n        rainfall_probability = 1 - no_rainfall_probability\n        \n        # Round the result to 4 decimal places\n        rainfall_probability = round(rainfall_probability, 4)\n        \n        result.append(rainfall_probability)\n    \n    return result\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Read the test cases\n    test_cases = []\n    for _ in range(num_test_cases):\n        probability, time = map(float, input().split())\n        test_cases.append((probability, time))\n\n    # Calculate and print the results\n    result = calculate_rainfall_probability(test_cases)\n    for probability in result:\n        print(probability)\n\nif __name__ == \"__main__\":\n    main()", "def calculate_rainfall_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n        test_cases (list): A list of tuples containing the probability of rainfall `P` and time `time`.\n\n    Returns:\n        list: A list of probabilities corresponding to each test case.\n    \"\"\"\n    import math\n\n    def calculate_probability(p, t):\n        \"\"\"\n        Calculate the probability that it rains during the time Raj is on the way.\n\n        Args:\n            p (float): The probability of rainfall.\n            t (int): The time it takes for Raj to reach his office.\n\n        Returns:\n            float: The probability that it rains during the time Raj is on the way.\n        \"\"\"\n        return math.ceil(p * t / 1440) / t\n\n    probabilities = []\n    for p, time in test_cases:\n        probability = calculate_probability(p, time)\n        probabilities.append(round(probability, 4))\n\n    return probabilities\n\ndef main():\n    \"\"\"\n    Main function to read the test cases and calculate the probabilities.\n    \"\"\"\n    test_cases = int(input())\n    test_cases_list = []\n    for _ in range(test_cases):\n        p, time = map(float, input().split())\n        test_cases_list.append((p, time))\n\n    probabilities = calculate_rainfall_probability(test_cases_list)\n    for probability in probabilities:\n        print(probability)\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability(rainfall_probability, travel_time):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes Raj to reach his office.\n\n    Args:\n        rainfall_probability (float): The probability that it will rain today.\n        travel_time (int): The time it takes for Raj to reach his office in minutes.\n\n    Returns:\n        float: The probability that it rains during the travel time.\n    \"\"\"\n    # Calculate the number of minutes in a day\n    minutes_in_day = 1440\n\n    # Calculate the number of minutes in the travel time\n    minutes_in_travel = travel_time\n\n    # Calculate the probability that it rains during the travel time\n    # This is done by multiplying the rainfall probability by the ratio of minutes in travel time to minutes in a day\n    # and rounding the result to 4 decimal places\n    rainfall_probability_during_travel = round(rainfall_probability * (minutes_in_travel / minutes_in_day), 4)\n\n    return rainfall_probability_during_travel\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Process each test case\n    for _ in range(num_test_cases):\n        # Read the rainfall probability and travel time\n        rainfall_probability, travel_time = map(float, input().split())\n\n        # Calculate the rainfall probability during the travel time\n        rainfall_probability_during_travel = calculate_rainfall_probability(rainfall_probability, travel_time)\n\n        # Print the result\n        print(rainfall_probability_during_travel)\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(T, test_cases):\n    \"\"\"\n    Calculate the probability that it rains during Raj's commute.\n\n    Args:\n    T (int): The number of test cases.\n    test_cases (list): A list of tuples containing P and time.\n\n    Returns:\n    None\n    \"\"\"\n    for i in range(T):\n        P, time = test_cases[i]\n        probability = P * (time / 1440)\n        print(f\"{probability:.4f}\")\n\n# Read the number of test cases\nT = int(input())\n\n# Read the test cases\ntest_cases = []\nfor _ in range(T):\n    P, time = map(float, input().split())\n    test_cases.append((P, time))\n\n# Calculate the probability for each test case\ncalculate_probability(T, test_cases)", "import math\n\n# Function to calculate the probability that it rains during a certain time\ndef calculate_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during a certain time.\n\n    Args:\n    p (float): The probability that it will rain today.\n    time (int): The time (in minutes) it will take for Raj to reach his office.\n\n    Returns:\n    float: The probability that it rains during the given time.\n    \"\"\"\n    # Calculate the probability that it will not rain during the given time\n    no_rain_probability = (1 - p) ** (time / 1440)\n    # Calculate the probability that it rains during the given time\n    rain_probability = 1 - no_rain_probability\n    # Round the result to 4 decimal places\n    return round(rain_probability, 4)\n\n# Read the number of test cases\nnum_test_cases = int(input())\n\n# Process each test case\nfor _ in range(num_test_cases):\n    # Read the probability and time\n    p, time = map(float, input().split())\n    # Calculate and print the probability that it rains during the given time\n    print(calculate_probability(p, time))", "def calculate_rainfall_probability(test_cases):\n    \"\"\"\n    Calculates the probability that it rains during the time Raj is on his way to the office.\n\n    Args:\n        test_cases (list): A list of tuples, where each tuple contains the probability of rain (P) and time (in minutes) to reach the office.\n\n    Returns:\n        list: A list of probabilities, rounded to 4 decimal places, that it rains during the time Raj is on his way to the office.\n    \"\"\"\n    rainfall_probabilities = []\n    for probability, time in test_cases:\n        # Calculate the probability that it rains during the time Raj is on his way to the office\n        probability_rainfall = probability * time / 1440\n        \n        # Round the result to 4 decimal places\n        probability_rainfall = round(probability_rainfall, 4)\n        \n        rainfall_probabilities.append(probability_rainfall)\n    \n    return rainfall_probabilities\n\ndef main():\n    # Get the number of test cases\n    test_cases = int(input())\n    \n    # Read the test cases\n    test_cases_data = []\n    for _ in range(test_cases):\n        probability, time = map(float, input().split())\n        test_cases_data.append((probability, time))\n    \n    # Calculate and print the rainfall probabilities\n    rainfall_probabilities = calculate_rainfall_probability(test_cases_data)\n    for probability in rainfall_probabilities:\n        print(f\"{probability:.4f}\")\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability():\n    # Read the number of test cases\n    T = int(input())\n\n    # Process each test case\n    for _ in range(T):\n        # Read the probability of rain and time\n        P, time = map(float, input().split())\n\n        # Calculate the probability that it rains during the time\n        probability = P * time / 1440\n\n        # Round the answer to 4 decimal places\n        probability = round(probability, 4)\n\n        # Print the result\n        print(probability)\n\n# Call the function\ncalculate_probability()", "import math\n\ndef calculate_rainfall_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on his way to the office.\n\n    Args:\n        test_cases (list): A list of tuples containing the probability of rain and time.\n\n    Returns:\n        list: A list of probabilities corresponding to each test case.\n    \"\"\"\n    results = []\n    for probability, time in test_cases:\n        # Calculate the probability that it does not rain\n        no_rain_probability = 1 - probability\n        # Calculate the probability that it rains during the given time\n        rainfall_probability = 1 - math.pow(1 - no_rain_probability, time / 1440)\n        # Round the result to 4 decimal places\n        result = round(rainfall_probability, 4)\n        results.append(result)\n    return results\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n    # Read the test cases\n    test_cases = []\n    for _ in range(num_test_cases):\n        probability, time = map(float, input().split())\n        test_cases.append((probability, time))\n    # Calculate and print the results\n    results = calculate_rainfall_probability(test_cases)\n    for result in results:\n        print(result)\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes for Raj to reach his office.\n\n    Args:\n    p (float): Probability of rain today (0 \u2264 P \u2264 0.5)\n    time (int): Time it takes for Raj to reach his office (10 \u2264 time \u2264 720)\n\n    Returns:\n    float: Probability that it rains during the time it takes for Raj to reach his office\n    \"\"\"\n    # Calculate the time fraction\n    time_fraction = time / 1440\n\n    # Calculate the probability that it rains during the time\n    probability = p * time_fraction + (1 - p) * (1 - time_fraction)\n\n    # Round the answer to 4 decimal places\n    return round(probability, 4)\n\n\ndef main():\n    # Read the number of test cases\n    t = int(input())\n\n    # Process each test case\n    for _ in range(t):\n        # Read the probability and time\n        p, time = map(float, input().split())\n\n        # Calculate and print the result\n        result = calculate_probability(p, time)\n        print(result)\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n        p (float): The probability that it will rain today.\n        time (int): The time it will take for Raj to reach his office in minutes.\n\n    Returns:\n        float: The probability that it rains during the time Raj is on the way.\n    \"\"\"\n    # Since time is a perfect divisor of 1440, we can consider the probability of rain for each hour\n    # and multiply them together to get the overall probability\n    hourly_probability = p\n    total_hours = time // 60\n    # We consider the probability of rain for each hour and multiply them together\n    # However, since we don't know if it rains in the first hour, we consider the probability of\n    # not raining in the first hour and multiply it with the probability of raining in the rest\n    # of the hours\n    probability = (1 - hourly_probability) * (hourly_probability ** (total_hours - 1))\n    return round(probability, 4)\n\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n    for _ in range(test_cases):\n        # Read the probability of rain and the time\n        p, time = map(float, input().split())\n        # Calculate the probability and print the result\n        result = calculate_probability(p, time)\n        print(result)\n\n\nif __name__ == \"__main__\":\n    main()", "def calculate_probability(rainfall_probability, travel_time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n    - rainfall_probability (float): The probability that it will rain today.\n    - travel_time (int): The time it will take for Raj to reach his office.\n\n    Returns:\n    - float: The probability that it rains during the time Raj is on the way.\n    \"\"\"\n\n    # Calculate the probability that it does not rain during the travel time\n    no_rain_probability = (1 - rainfall_probability) ** (travel_time // 1440)\n\n    # Calculate the probability that it rains during the travel time\n    rain_probability = 1 - no_rain_probability\n\n    # Round the result to 4 decimal places\n    rain_probability = round(rain_probability, 4)\n\n    return rain_probability\n\n\n# Get the number of test cases\ntest_cases = int(input())\n\n# Process each test case\nfor _ in range(test_cases):\n    # Get the rainfall probability and travel time\n    rainfall_probability, travel_time = map(float, input().split())\n\n    # Calculate and print the result\n    print(calculate_probability(rainfall_probability, travel_time))", "def calculate_rain_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes to reach the office.\n\n    Args:\n        p (float): The probability of rain.\n        time (int): The time it takes to reach the office in minutes.\n\n    Returns:\n        float: The probability that it rains during the time it takes to reach the office.\n    \"\"\"\n    # Calculate the probability that it does not rain\n    no_rain_prob = 1 - p\n    \n    # Calculate the probability that it rains during the time it takes to reach the office\n    rain_prob = (1 - no_rain_prob) * time\n    \n    return round(rain_prob, 4)\n\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Process each test case\n    for _ in range(test_cases):\n        # Read the probability of rain and the time to reach the office\n        p, time = map(float, input().split())\n\n        # Calculate and print the probability that it rains during the time it takes to reach the office\n        print(calculate_rain_probability(p, time))\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\n# Function to calculate the probability\ndef calculate_probability(rainfall_probability, travel_time):\n    \"\"\"\n    This function calculates the probability that it rains during the time \n    Raj is on the way to his office.\n\n    Args:\n        rainfall_probability (float): The probability of rainfall today.\n        travel_time (int): The time it takes for Raj to reach his office.\n\n    Returns:\n        float: The probability that it rains during the time Raj is on the way.\n    \"\"\"\n    return min(rainfall_probability, 1 - (1 - rainfall_probability) * (travel_time / 1440))\n\n# Main program\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Loop over each test case\n    for _ in range(test_cases):\n        # Read the probability of rainfall and travel time\n        rainfall_probability, travel_time = map(float, input().split())\n\n        # Calculate and print the probability\n        probability = round(calculate_probability(rainfall_probability, travel_time), 4)\n        print(probability)\n\n# Run the main program\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rain_probability(test_cases):\n    \"\"\"\n    Calculate the probability of rainfall during Raj's commute.\n\n    Args:\n    test_cases (list): A list of tuples containing the probability of rain (P) and time (in minutes) to reach the office.\n\n    Returns:\n    list: A list of probabilities that it rains during Raj's commute.\n    \"\"\"\n    results = []\n    for p, time in test_cases:\n        # Calculate the probability of rainfall during the commute\n        # Since time is a perfect divisor of 1440, we can use this to calculate the probability\n        # The formula for this is: P = 1 - (1 - P)^time\n        probability = 1 - (1 - p) ** (time / 1440)\n        results.append(round(probability, 4))\n    return results\n\n# Read the number of test cases\nnum_test_cases = int(input())\n\n# Read the test cases\ntest_cases = [tuple(map(float, input().split())) for _ in range(num_test_cases)]\n\n# Calculate and print the results\nresults = calculate_rain_probability(test_cases)\nfor result in results:\n    print(result)", "import math\n\ndef calculate_probability(T, P, time):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes for Raj to reach his office.\n\n    Args:\n    T (int): The number of test cases.\n    P (float): The probability of rainfalls today.\n    time (int): The time it takes for Raj to reach his office in minutes.\n\n    Returns:\n    float: The probability that it rains during the time it takes for Raj to reach his office.\n    \"\"\"\n    # Calculate the probability that it rains during the time it takes for Raj to reach his office\n    probability = P * (1 - (1 - P) ** (time / 1440))\n    return round(probability, 4)\n\ndef main():\n    \"\"\"\n    Main function to read the input and output the result.\n    \"\"\"\n    T = int(input())  # Read the number of test cases\n    for _ in range(T):\n        P, time = map(float, input().split())  # Read the probability and time\n        probability = calculate_probability(T, P, time)\n        print(probability)\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability(p, time):\n    \"\"\"\n    Calculate the probability of rainfall during Raj's commute.\n\n    Args:\n    p (float): The probability of rainfall today.\n    time (int): The time it takes for Raj to reach his office.\n\n    Returns:\n    float: The probability of rainfall during Raj's commute.\n    \"\"\"\n    # Calculate the probability of no rainfall\n    no_rain_probability = 1 - p\n    \n    # Calculate the probability of rainfall during Raj's commute\n    # Assuming the rainfall is uniform and independent of time\n    commute_probability = p\n    \n    # Calculate the probability of no rainfall during Raj's commute\n    commute_no_rain_probability = no_rain_probability\n    \n    # Calculate the probability of rainfall during Raj's commute using the normal distribution\n    # Assuming the probability of rainfall is uniform and independent of time\n    commute_probability = p * math.exp(-time / (1440 * p))\n    \n    # Calculate the probability of no rainfall during Raj's commute using the normal distribution\n    # Assuming the probability of rainfall is uniform and independent of time\n    commute_no_rain_probability = (1 - p) * math.exp(-time / (1440 * (1 - p)))\n    \n    # Calculate the overall probability of rainfall during Raj's commute\n    overall_probability = commute_probability + (1 - commute_probability) * commute_no_rain_probability\n    \n    return round(overall_probability, 4)\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n    \n    # Process each test case\n    for _ in range(test_cases):\n        # Read the probability of rainfall and commute time\n        p, time = map(float, input().split())\n        \n        # Calculate and print the probability of rainfall during Raj's commute\n        print(calculate_rainfall_probability(p, time))\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes for Raj to reach his office.\n\n    Args:\n    p (float): The probability that it will rain today.\n    time (int): The time (in minutes) it will take for Raj to reach his office.\n\n    Returns:\n    float: The probability that it rains during the time it takes for Raj to reach his office.\n    \"\"\"\n    # Calculate the number of minutes in a day\n    minutes_in_a_day = 1440\n\n    # Calculate the number of periods of time that are equal to the given time\n    periods = minutes_in_a_day // time\n\n    # Calculate the probability that it rains during the given time\n    probability = (1 - p) ** periods * p\n\n    # Return the calculated probability\n    return round(probability, 4)\n\ndef main():\n    \"\"\"\n    Read the number of test cases, and then calculate the probability for each test case.\n    \"\"\"\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Process each test case\n    for _ in range(test_cases):\n        # Read the probability and time\n        probability, time = map(float, input().split())\n\n        # Calculate the probability\n        result = calculate_probability(probability, time)\n\n        # Print the result\n        print(result)\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during Raj's commute.\n\n    Args:\n        test_cases (int): Number of test cases.\n\n    Returns:\n        list: A list of probabilities for each test case.\n    \"\"\"\n    probabilities = []\n    for _ in range(test_cases):\n        # Get the probability of rain and time\n        p, time = map(float, input().split())\n        \n        # Calculate the probability of no rain\n        prob_no_rain = (1 - p) ** (time // 1440)\n        \n        # Calculate the probability of rain\n        prob_rain = 1 - prob_no_rain\n        \n        # Round the result to 4 decimal places\n        result = round(prob_rain, 4)\n        \n        probabilities.append(result)\n    \n    return probabilities\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Calculate and print the probabilities\nprobabilities = calculate_probability(test_cases)\nfor i, prob in enumerate(probabilities):\n    print(f\"{prob}\")", "import math\n\ndef calculate_probability(T, test_cases):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way to his office.\n\n    Args:\n    T (int): The number of test cases.\n    test_cases (list): A list of tuples, where each tuple contains the probability of rain (P) and the travel time.\n\n    Returns:\n    None\n    \"\"\"\n    for i in range(T):\n        P, time = test_cases[i]\n        probability = P * (1 - (1 - P) ** (1440 / time))\n        print(f\"{probability:.4f}\")\n\n\n# Read the number of test cases\nT = int(input())\n\n# Read the test cases\ntest_cases = []\nfor _ in range(T):\n    P, time = map(float, input().split())\n    test_cases.append((P, time))\n\n# Calculate and print the probabilities\ncalculate_probability(T, test_cases)", "for _ in range(int(input())):\n    # Input: P (probability of rain) and time (time taken to reach office)\n    probability, time = map(float, input().split())\n\n    # Calculate the probability that it rains during the time taken to reach office\n    rain_probability = probability * time\n\n    # Print the result to 4 decimal places\n    print(f\"{rain_probability:.4f}\")", "import math\n\ndef calculate_rain_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes for Raj to reach his office.\n\n    Args:\n    p (float): The probability of rain today.\n    time (int): The time it takes for Raj to reach his office in minutes.\n\n    Returns:\n    float: The probability that it rains during the time it takes for Raj to reach his office.\n    \"\"\"\n    # Calculate the probability that it rains during the time it takes for Raj to reach his office\n    # using the exponential distribution formula\n    return 1 - math.exp(-p * time)\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Process each test case\n    for _ in range(num_test_cases):\n        # Read the probability of rain and the time it takes for Raj to reach his office\n        p, time = map(float, input().split())\n\n        # Calculate and print the probability that it rains during the time it takes for Raj to reach his office\n        print(round(calculate_rain_probability(p, time), 4))\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability(probability, time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on his way to the office.\n\n    Args:\n        probability (float): The probability of rainfall today.\n        time (int): The time it takes for Raj to reach his office (in minutes).\n\n    Returns:\n        float: The probability that it rains during the time Raj is on his way to the office.\n    \"\"\"\n    # Calculate the probability that it does not rain during the time Raj is on his way\n    no_rain_probability = (1 - probability) ** (time / 1440)\n    \n    # Calculate the probability that it rains during the time Raj is on his way\n    rainfall_probability = 1 - no_rain_probability\n    \n    # Round the result to 4 decimal places\n    rainfall_probability = round(rainfall_probability, 4)\n    \n    return rainfall_probability\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Process each test case\n    for _ in range(test_cases):\n        # Read the probability of rainfall and time\n        probability, time = map(float, input().split())\n\n        # Calculate and print the rainfall probability\n        print(calculate_rainfall_probability(probability, time))\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rain_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n        p (float): The probability that it will rain today.\n        time (int): The time it will take for Raj to reach his office.\n\n    Returns:\n        float: The probability that it rains during the time Raj is on the way.\n    \"\"\"\n    # Calculate the number of minutes in a day\n    total_minutes = 1440\n    \n    # Calculate the probability that it rains during the given time\n    probability = (total_minutes // time) * p\n    \n    return round(probability, 4)\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Process each test case\nfor _ in range(test_cases):\n    # Read the probability of rain and time\n    p, time = map(float, input().split())\n    \n    # Calculate and print the probability that it rains during the time Raj is on the way\n    probability = calculate_rain_probability(p, time)\n    print(probability)", "import math\n\ndef calculate_rain_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during Raj's commute.\n\n    Args:\n    test_cases (list): A list of tuples containing the probability of rain and commute time.\n\n    Returns:\n    list: A list of probabilities corresponding to each test case.\n    \"\"\"\n    result = []\n    for p, time in test_cases:\n        # Calculate the probability of rain during the commute\n        # Assuming the commute time is a multiple of 24 hours (1440 minutes)\n        probability = p * (1 - (1 - p) ** (1440 // time))\n        # Round the result to 4 decimal places\n        probability = round(probability, 4)\n        result.append(probability)\n    return result\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n    # Read the input data\n    data = [tuple(map(float, input().split())) for _ in range(test_cases)]\n    # Calculate and print the results\n    result = calculate_rain_probability(data)\n    for probability in result:\n        print(f\"{probability}\")\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way to his office.\n\n    Args:\n        test_cases (list): A list of tuples containing the probability of rain and time taken.\n\n    Returns:\n        list: A list of probabilities that it rains during the time Raj is on the way to his office.\n    \"\"\"\n    results = []\n    for p, time in test_cases:\n        # Calculate the probability that it rains during the time Raj is on the way\n        # by multiplying the probability of rain with the time and dividing by the total minutes in a day\n        probability = p * time / 1440\n        # Round the result to 4 decimal places\n        result = round(probability, 4)\n        results.append(result)\n    return results\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n    # Read the test cases\n    test_cases = []\n    for _ in range(num_test_cases):\n        p, time = map(float, input().split())\n        test_cases.append((p, time))\n    # Calculate and print the results\n    results = calculate_rainfall_probability(test_cases)\n    for result in results:\n        print(result)\n\nif __name__ == \"__main__\":\n    main()", "def calculate_rain_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during Raj's commute.\n\n    Args:\n    test_cases (list): A list of tuples containing probability (P) and time (in minutes).\n\n    Returns:\n    list: A list of probabilities that it rains during Raj's commute.\n    \"\"\"\n    import math\n\n    # Initialize an empty list to store the results\n    results = []\n\n    # Iterate over each test case\n    for p, time in test_cases:\n        # Calculate the probability that it doesn't rain during Raj's commute\n        no_rain_prob = (1 - p) ** (time / 1440)\n\n        # Calculate the probability that it rains during Raj's commute\n        rain_prob = 1 - no_rain_prob\n\n        # Round the result to 4 decimal places\n        rain_prob = round(rain_prob, 4)\n\n        # Append the result to the list\n        results.append(rain_prob)\n\n    return results\n\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Read the test cases\ntest_cases_list = []\nfor _ in range(test_cases):\n    p, time = map(float, input().split())\n    test_cases_list.append((p, time))\n\n# Calculate and print the results\nresults = calculate_rain_probability(test_cases_list)\nfor result in results:\n    print(result)", "import math\n\ndef calculate_rain_probability():\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way to his office.\n\n    Args:\n        p (float): Probability of rainfalls today.\n        time (int): Time (in minutes) it will take for Raj to reach his office.\n\n    Returns:\n        float: Probability that it rains during the time Raj is on the way.\n    \"\"\"\n\n    # Calculate the probability that it does not rain\n    prob_no_rain = 1 - p\n\n    # Since the time is a perfect divisor of 1440, we can calculate the probability that it rains\n    # by multiplying the probability that it does not rain with the number of minutes in a day\n    # divided by the given time.\n    prob_rain = (prob_no_rain * (1440 / time))\n\n    return round(prob_rain, 4)\n\ndef main():\n    \"\"\"\n    Main function to read input, calculate the probability and print the result.\n    \"\"\"\n\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Read each test case\n    for _ in range(test_cases):\n        # Read the probability of rainfalls today and time\n        p, time = map(float, input().split())\n\n        # Calculate the probability that it rains during the time Raj is on the way\n        prob_rain = calculate_rain_probability()\n\n        # Print the result\n        print(prob_rain)\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability():\n    \"\"\"\n    Calculate the probability that it rains during Raj's journey.\n\n    Args:\n        P (float): Probability of rainfall.\n        time (int): Travel time in minutes.\n\n    Returns:\n        float: Probability that it rains during Raj's journey.\n    \"\"\"\n    # Calculate the probability that it does not rain\n    prob_no_rain = 1 - P\n\n    # Calculate the probability that it rains during Raj's journey\n    prob_rain = 1 - (prob_no_rain ** (time // 1440))\n\n    return round(prob_rain, 4)\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Read each test case\n    for _ in range(test_cases):\n        # Read the probability of rainfall and travel time\n        P, time = map(float, input().split())\n\n        # Calculate and print the probability that it rains\n        print(calculate_rainfall_probability())\n\nif __name__ == \"__main__\":\n    main()", "def calculate_rain_probability():\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n    None\n\n    Returns:\n    None\n    \"\"\"\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Iterate over each test case\n    for _ in range(num_test_cases):\n        # Read the probability of rain and the time\n        probability, time = map(float, input().split())\n\n        # Calculate the probability that it rains during the time\n        # Since the probability of rain is given, we can use the formula for continuous uniform distribution\n        # The probability that it rains during the time is equal to the probability of the time being in the interval (0, time)\n        # Since the probability is continuous and uniform, we can use the formula for the area of a rectangle\n        rain_probability = probability * time\n\n        # Print the result rounded to 4 decimal places\n        print(f\"{rain_probability:.4f}\")\n\n\nif __name__ == \"__main__\":\n    calculate_rain_probability()", "def calculate_probability(rain_probability, time):\n    \"\"\"\n    Calculate the probability that it rains during the given time.\n\n    Args:\n    rain_probability (float): The probability that it will rain today.\n    time (int): The time (in minutes) it takes for Raj to reach his office.\n\n    Returns:\n    float: The probability that it rains during the given time.\n    \"\"\"\n    # Calculate the probability that it does not rain during the given time\n    no_rain_probability = 1 - rain_probability\n    \n    # Calculate the probability that it rains during the given time\n    rain_probability_time = no_rain_probability ** (time // 1440)\n    \n    return rain_probability_time\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Read each test case\n    for _ in range(test_cases):\n        # Read the probability of rain and time\n        rain_probability, time = map(float, input().split())\n\n        # Calculate the probability that it rains during the given time\n        result = round(calculate_probability(rain_probability, time), 4)\n\n        # Print the result\n        print(result)\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(T, test_cases):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n        T (int): The number of test cases.\n        test_cases (list): A list of tuples containing the probability and time.\n\n    Returns:\n        None\n    \"\"\"\n    for i in range(T):\n        probability, time = test_cases[i]\n        # Calculate the probability that it does not rain\n        no_rain_probability = (1 - probability) ** (time / 1440)\n        # Calculate the probability that it rains during the time\n        rain_probability = 1 - no_rain_probability\n        # Print the result to 4 decimal places\n        print(f\"{rain_probability:.4f}\")\n\ndef main():\n    # Read the number of test cases\n    T = int(input())\n    # Read the test cases\n    test_cases = []\n    for _ in range(T):\n        probability, time = map(float, input().split())\n        test_cases.append((probability, time))\n    # Calculate and print the result\n    calculate_probability(T, test_cases)\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(time, probability):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes to reach the office.\n\n    Args:\n    time (int): The time it takes to reach the office in minutes.\n    probability (float): The probability that it will rain today.\n\n    Returns:\n    float: The probability that it rains during the time it takes to reach the office.\n    \"\"\"\n    # Since time is a perfect divisor of 1440, we can calculate the probability of no rain\n    # as (1440 - time) / 1440\n    # So, the probability of rain is 1 - (1440 - time) / 1440\n    # which is equal to time / 1440\n    probability_of_rain = (time / 1440) * probability\n    return probability_of_rain\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Process each test case\n    for _ in range(test_cases):\n        # Read the probability and time\n        probability, time = map(float, input().split())\n\n        # Calculate the probability of rain\n        probability_of_rain = calculate_probability(time, probability)\n\n        # Round the result to 4 decimal places\n        probability_of_rain = round(probability_of_rain, 4)\n\n        # Print the result\n        print(probability_of_rain)\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(probability, time):\n    \"\"\"\n    Calculate the probability that it rains during Raj's journey.\n\n    Args:\n        probability (float): The probability of rainfall today.\n        time (int): The time (in minutes) it will take for Raj to reach his office.\n\n    Returns:\n        float: The probability that it rains during Raj's journey.\n    \"\"\"\n    # Calculate the probability that it does not rain during Raj's journey\n    no_rain_probability = (1 - probability) ** (time / 1440)\n    \n    # Calculate the probability that it rains during Raj's journey\n    rain_probability = 1 - no_rain_probability\n    \n    return round(rain_probability, 4)\n\n\ndef main():\n    \"\"\"\n    Main function to read input and calculate the probability.\n    \"\"\"\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Process each test case\n    for _ in range(test_cases):\n        # Read the probability and time\n        probability, time = map(float, input().split())\n        \n        # Calculate and print the probability\n        print(calculate_probability(probability, time))\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(T, P, time):\n    \"\"\"\n    Calculate the probability of rain during the time Raj is on the way.\n\n    Parameters:\n    T (int): The number of test cases.\n    P (float): The probability that it will rain today.\n    time (int): The time (in minutes) it will take for Raj to reach his office.\n\n    Returns:\n    float: The probability of rain during the time Raj is on the way.\n    \"\"\"\n    # Calculate the probability of no rain\n    p_no_rain = 1 - P\n    \n    # Calculate the probability of rain during the time\n    p_rain = p_no_rain * (1 - (1 - P) ** (1440 // time))\n    \n    # Round the result to 4 decimal places\n    p_rain = round(p_rain, 4)\n    \n    return p_rain\n\ndef main():\n    # Read the number of test cases\n    T = int(input())\n    \n    # Iterate over each test case\n    for _ in range(T):\n        # Read the probability and time\n        P, time = map(float, input().split())\n        \n        # Calculate and print the probability of rain\n        print(calculate_probability(T, P, time))\n\nif __name__ == \"__main__\":\n    main()", "def calculate_probability(rain_probability, travel_time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n    rain_probability (float): The probability that it will rain today.\n    travel_time (int): The time it takes for Raj to reach his office in minutes.\n\n    Returns:\n    float: The probability that it rains during the time Raj is on the way.\n    \"\"\"\n    # Calculate the probability that it rains during the travel time\n    # by multiplying the probability of rain with the fraction of the day\n    # that Raj spends traveling\n    return rain_probability * (travel_time / 1440)\n\n\n# Read the number of test cases\nnum_test_cases = int(input())\n\n# Process each test case\nfor _ in range(num_test_cases):\n    # Read the probability of rain and travel time\n    rain_probability, travel_time = map(float, input().split())\n\n    # Calculate and print the result\n    result = calculate_probability(rain_probability, travel_time)\n    print(f\"{result:.4f}\")", "def calculate_rain_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way to his office.\n\n    Args:\n        test_cases (list): A list of tuples containing the probability of rain (P) and the time (in minutes) it takes for Raj to reach his office.\n\n    Returns:\n        None\n    \"\"\"\n\n    # Iterate over each test case\n    for p, time in test_cases:\n        # Calculate the probability that it does not rain during the time Raj is on the way\n        no_rain_probability = (1 - p) ** (time / 1440)\n        \n        # Calculate the probability that it rains during the time Raj is on the way\n        rain_probability = 1 - no_rain_probability\n        \n        # Round the result to 4 decimal places and print it\n        print(f\"{rain_probability:.4f}\")\n\n\n# Read the number of test cases\nnum_test_cases = int(input())\n\n# Read the test cases\ntest_cases = []\nfor _ in range(num_test_cases):\n    p, time = map(float, input().split())\n    test_cases.append((p, time))\n\n# Calculate the probability for each test case\ncalculate_rain_probability(test_cases)", "import math\n\ndef calculate_probability():\n    # Get the number of test cases\n    test_cases = int(input())\n\n    # Loop through each test case\n    for _ in range(test_cases):\n        # Get the probability and time\n        probability, time = map(float, input().split())\n\n        # Calculate the probability that it rains during the time\n        probability_raining = probability * (1 - (1 - probability) ** (1440 // time))\n\n        # Round the answer to 4 decimal places\n        probability_raining = round(probability_raining, 4)\n\n        # Print the answer\n        print(probability_raining)\n\n# Call the function to start the program\ncalculate_probability()", "import math\n\ndef calculate_rain_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n    p (float): The probability of rainfall today.\n    time (int): The time in minutes it will take for Raj to reach his office.\n\n    Returns:\n    float: The probability that it rains during the time Raj is on the way.\n    \"\"\"\n    # Calculate the probability that it doesn't rain during the time Raj is on the way\n    prob_no_rain = (1 - p) ** (time / 1440)\n\n    # Calculate the probability that it rains during the time Raj is on the way\n    prob_rain = 1 - prob_no_rain\n\n    # Round the answer to 4 decimal places\n    return round(prob_rain, 4)\n\n\ndef main():\n    \"\"\"\n    Main function to read input, calculate the probability, and print the result.\n    \"\"\"\n    # Read the number of test cases\n    t = int(input())\n\n    # Iterate over each test case\n    for _ in range(t):\n        # Read the probability of rainfall and the time\n        p, time = map(float, input().split())\n\n        # Calculate and print the probability that it rains during the time Raj is on the way\n        print(calculate_rain_probability(p, time))\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(probability_of_rainfall, travel_time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n        probability_of_rainfall (float): The probability that it will rain today.\n        travel_time (int): The time it takes for Raj to reach his office.\n\n    Returns:\n        float: The probability that it rains during the travel time.\n    \"\"\"\n    # Calculate the probability that it does not rain during the travel time\n    probability_no_rain = (1 - probability_of_rainfall) ** (travel_time / 1440)\n\n    # Calculate the probability that it rains during the travel time\n    probability_rain = 1 - probability_no_rain\n\n    # Round the answer to 4 decimal places\n    probability_rain = round(probability_rain, 4)\n\n    return probability_rain\n\n# Read the number of test cases\nnum_test_cases = int(input())\n\n# Process each test case\nfor _ in range(num_test_cases):\n    # Read the probability of rainfall and travel time\n    probability_of_rainfall, travel_time = map(float, input().split())\n\n    # Calculate the probability of rainfall during travel time\n    probability_rain = calculate_probability(probability_of_rainfall, travel_time)\n\n    # Print the result\n    print(probability_rain)", "import math\n\ndef calculate_probability(T, test_cases):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n    T (int): The number of test cases.\n    test_cases (list): A list of tuples containing the probability and time.\n\n    Returns:\n    None\n    \"\"\"\n    for probability, time in test_cases:\n        # Calculate the probability that it rains during the time\n        rain_probability = probability * (time / 1440)\n        \n        # Round the result to 4 decimal places\n        result = round(rain_probability, 4)\n        \n        print(result)\n\n# Read the number of test cases\nT = int(input())\n\n# Read the test cases\ntest_cases = []\nfor _ in range(T):\n    probability, time = map(float, input().split())\n    test_cases.append((probability, time))\n\n# Calculate the probability\ncalculate_probability(T, test_cases)", "import math\n\ndef calculate_rain_probability(probability, time):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes to reach the office.\n\n    Args:\n    probability (float): The probability that it will rain today.\n    time (int): The time it takes to reach the office in minutes.\n\n    Returns:\n    float: The probability that it rains during the time it takes to reach the office.\n    \"\"\"\n    # Calculate the probability that it does not rain during the time it takes to reach the office\n    no_rain_probability = (1 - probability) ** (time / 1440)\n\n    # Calculate the probability that it rains during the time it takes to reach the office\n    rain_probability = 1 - no_rain_probability\n\n    # Round the result to 4 decimal places\n    return round(rain_probability, 4)\n\n\ndef main():\n    \"\"\"\n    Read the number of test cases, then for each test case, read the probability and time, \n    and calculate the probability that it rains during the time it takes to reach the office.\n    \"\"\"\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Process each test case\n    for _ in range(num_test_cases):\n        # Read the probability and time\n        probability, time = map(float, input().split())\n\n        # Calculate and print the probability that it rains during the time it takes to reach the office\n        print(calculate_rain_probability(probability, time))\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes for Raj to reach his office.\n\n    Args:\n        test_cases (list): A list of tuples containing probability (P) and travel time.\n\n    Returns:\n        list: A list of probabilities corresponding to each test case.\n    \"\"\"\n    results = []\n    for p, time in test_cases:\n        # Calculate the probability that it does not rain during the travel time\n        prob_not_rain = (1 - p) ** (time / 1440)\n        # Calculate the probability that it rains during the travel time\n        prob_rain = 1 - prob_not_rain\n        # Round the result to 4 decimal places\n        prob_rain = round(prob_rain, 4)\n        results.append(prob_rain)\n    return results\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n    # Read the test cases\n    test_cases_data = []\n    for _ in range(test_cases):\n        p, time = map(float, input().split())\n        test_cases_data.append((p, time))\n    # Calculate and print the results\n    results = calculate_probability(test_cases_data)\n    for result in results:\n        print(result)\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes for Raj to reach his office.\n\n    Args:\n        p (float): The probability that it will rain today.\n        time (int): The time it takes for Raj to reach his office in minutes.\n\n    Returns:\n        float: The probability that it rains during the time it takes for Raj to reach his office.\n    \"\"\"\n    # Calculate the number of hours in 1440 minutes\n    total_hours = 1440 / time\n    \n    # Calculate the probability of rain during the total time\n    total_probability = p\n    \n    # Calculate the probability of no rain during the total time\n    no_rain_probability = 1 - p\n    \n    # Calculate the probability of rain during the time it takes for Raj to reach his office\n    # using the formula for uniform distribution\n    probability = 1 - math.exp(-total_probability * total_hours)\n    \n    return round(probability, 4)\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n    \n    # Process each test case\n    for _ in range(test_cases):\n        # Read the probability of rain and time\n        p, time = map(float, input().split())\n        \n        # Calculate and print the probability\n        print(calculate_probability(p, time))\n\nif __name__ == \"__main__\":\n    main()", "def calculate_rain_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes for Raj to reach his office.\n\n    Args:\n        test_cases (list): A list of tuples, where each tuple contains the probability P and time in minutes.\n\n    Returns:\n        list: A list of probabilities that it rains during the time it takes for Raj to reach his office.\n    \"\"\"\n    import math\n\n    result = []\n    for p, time in test_cases:\n        # Calculate the probability that it rains during the time it takes for Raj to reach his office\n        # This is equivalent to the probability that a uniform random variable takes a value between 0 and time\n        # We use the formula for the probability that a uniform random variable takes a value between 0 and x\n        probability = 1 - (1 - p) ** (1440 / time)\n        result.append(round(probability, 4))\n\n    return result\n\n\ndef main():\n    \"\"\"\n    Main function to read the input and calculate the probabilities.\n    \"\"\"\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Read the test cases\n    test_cases = []\n    for _ in range(num_test_cases):\n        p, time = map(float, input().split())\n        test_cases.append((p, time))\n\n    # Calculate and print the probabilities\n    probabilities = calculate_rain_probability(test_cases)\n    for probability in probabilities:\n        print(probability)\n\n\nif __name__ == \"__main__\":\n    main()", "def calculate_rain_probability(probability, time):\n    \"\"\"\n    Calculate the probability that it rains during a given time.\n\n    Args:\n    probability (float): The probability that it will rain today.\n    time (int): The time it will take for Raj to reach his office.\n\n    Returns:\n    float: The probability that it rains during the given time.\n    \"\"\"\n    # Calculate the probability that it rains during the given time\n    return probability * time\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Process each test case\n    for _ in range(num_test_cases):\n        # Read the probability and time\n        probability, time = map(float, input().split())\n\n        # Calculate and print the result\n        result = calculate_rain_probability(probability, time)\n        print(\"{:.4f}\".format(result))\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rain_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes to reach the office.\n\n    Args:\n    test_cases (list): A list of tuples, where each tuple contains the probability of rain (P) and the time (in minutes) it takes to reach the office.\n\n    Returns:\n    list: A list of the calculated probabilities, rounded to 4 decimal places.\n    \"\"\"\n    result = []\n    for probability, time in test_cases:\n        # Calculate the probability that it rains during the time it takes to reach the office\n        probability_rain_during_time = probability * (1 - (1 - probability) ** (1440 // time))\n        \n        # Round the result to 4 decimal places\n        result.append(round(probability_rain_during_time, 4))\n    \n    return result\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n    \n    # Read the test cases\n    test_cases = []\n    for _ in range(num_test_cases):\n        probability, time = map(float, input().split())\n        test_cases.append((probability, time))\n    \n    # Calculate and print the probabilities\n    probabilities = calculate_rain_probability(test_cases)\n    for probability in probabilities:\n        print(f\"{probability:.4f}\")\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rain_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way to the office.\n\n    Args:\n        test_cases (list): A list of tuples containing the probability of rain and time.\n\n    Returns:\n        list: A list of probabilities that it rains during the time Raj is on the way.\n    \"\"\"\n    result = []\n    for probability, time in test_cases:\n        # Calculate the probability that it does not rain during the time\n        no_rain_probability = (1 - probability) ** (time / 1440)\n        # Calculate the probability that it rains during the time\n        rain_probability = 1 - no_rain_probability\n        # Round the result to 4 decimal places\n        result.append(round(rain_probability, 4))\n    return result\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n    # Read the test cases\n    test_cases_data = []\n    for _ in range(test_cases):\n        probability, time = map(float, input().split())\n        test_cases_data.append((probability, time))\n    # Calculate the probabilities\n    probabilities = calculate_rain_probability(test_cases_data)\n    # Print the probabilities\n    for probability in probabilities:\n        print(probability)\n\nif __name__ == \"__main__\":\n    main()", "def calculate_rainfall_probability(test_cases):\n    \"\"\"\n    Calculate the probability of rainfall during Raj's commute to the office.\n\n    Args:\n        test_cases (list): A list of tuples containing the probability of rainfall and commute time.\n\n    Returns:\n        list: A list of probabilities of rainfall during Raj's commute.\n    \"\"\"\n    probabilities = []\n    for probability, time in test_cases:\n        # Calculate the probability of rainfall during the commute\n        rainfall_probability = probability * time / 1440\n        probabilities.append(round(rainfall_probability, 4))\n    return probabilities\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Read the test cases\n    test_cases = []\n    for _ in range(num_test_cases):\n        probability, time = map(float, input().split())\n        test_cases.append((probability, time))\n\n    # Calculate and print the probabilities\n    probabilities = calculate_rainfall_probability(test_cases)\n    for probability in probabilities:\n        print(probability)\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rain_probability(test_cases):\n    \"\"\"\n    Calculate the probability of rain during the time it takes to reach the office.\n\n    Args:\n        test_cases (list): A list of tuples containing the probability of rain and the time taken.\n\n    Returns:\n        None\n    \"\"\"\n    for probability, time in test_cases:\n        # Calculate the probability of rain during the given time\n        probability_rain = probability * time / 1440\n\n        # Round the result to 4 decimal places\n        probability_rain = round(probability_rain, 4)\n\n        # Print the result\n        print(f\"{probability_rain:.4f}\")\n\n\ndef main():\n    \"\"\"\n    Main function to get the number of test cases and process them.\n\n    Returns:\n        None\n    \"\"\"\n    # Get the number of test cases\n    num_test_cases = int(input())\n\n    # Process each test case\n    test_cases = []\n    for _ in range(num_test_cases):\n        # Get the probability of rain and time taken\n        probability, time = map(float, input().split())\n\n        # Add the test case to the list\n        test_cases.append((probability, time))\n\n    # Calculate and print the results\n    calculate_rain_probability(test_cases)\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(p, time):\n    \"\"\"\n    Calculate the probability of rainfall during Raj's journey.\n\n    Args:\n    p (float): Probability of rainfall today.\n    time (int): Time taken for Raj to reach his office in minutes.\n\n    Returns:\n    float: Probability of rainfall during Raj's journey, rounded to 4 decimal places.\n    \"\"\"\n    # Calculate the probability of no rainfall during the journey\n    no_rain_probability = (1 - p) ** (time / 1440)\n    \n    # Calculate the probability of rainfall during the journey\n    rain_probability = 1 - no_rain_probability\n    \n    # Round the result to 4 decimal places\n    return round(rain_probability, 4)\n\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Process each test case\nfor _ in range(test_cases):\n    # Read the probability of rainfall and time\n    p, time = map(float, input().split())\n\n    # Calculate and print the probability of rainfall during the journey\n    print(calculate_probability(p, time))", "def rainfall_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n        p (float): Probability of rain (0 to 0.5)\n        time (int): Time it takes for Raj to reach his office (10 to 720 minutes)\n\n    Returns:\n        float: Probability that it rains during the time Raj is on the way (rounded to 4 decimal places)\n    \"\"\"\n    # Calculate the time period when it rains (0 to time)\n    rain_time = time / 1440\n    # Calculate the probability of rain during the time period\n    prob_rain = p * rain_time\n    # Return the probability, rounded to 4 decimal places\n    return round(prob_rain, 4)\n\n# Read the number of test cases\nnum_test_cases = int(input())\n\n# Process each test case\nfor _ in range(num_test_cases):\n    # Read the probability of rain and time\n    p, time = map(float, input().split())\n    # Calculate and print the probability that it rains during the time Raj is on the way\n    print(rainfall_probability(p, time))", "import math\n\ndef calculate_rainfall_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way to his office.\n\n    Args:\n        test_cases (list): A list of tuples containing the probability of rain and time.\n\n    Returns:\n        list: A list of probabilities rounded to 4 decimal places.\n    \"\"\"\n    probabilities = []\n    for probability, time in test_cases:\n        # Calculate the rainfall probability\n        rainfall_probability = probability * (1440 / time)\n        # Round the result to 4 decimal places\n        rainfall_probability = round(rainfall_probability, 4)\n        # Append the result to the list\n        probabilities.append(str(rainfall_probability))\n    return probabilities\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n    # Read the test cases\n    test_cases_list = [tuple(map(float, input().split())) for _ in range(test_cases)]\n    # Calculate and print the probabilities\n    probabilities = calculate_rainfall_probability(test_cases_list)\n    for probability in probabilities:\n        print(probability)\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes for Raj to reach his office.\n\n    Args:\n        p (float): The probability of rainfall today (0 \u2264 p \u2264 0.5)\n        time (int): The time it takes for Raj to reach his office (10 \u2264 time \u2264 720)\n\n    Returns:\n        float: The probability that it rains during the time it takes for Raj to reach his office\n    \"\"\"\n    # Calculate the probability that it does not rain during the time it takes for Raj to reach his office\n    no_rain_probability = (1 - p) ** (time / 1440)\n    \n    # Calculate the probability that it rains during the time it takes for Raj to reach his office\n    rainfall_probability = 1 - no_rain_probability\n    \n    # Round the result to 4 decimal places\n    rainfall_probability = round(rainfall_probability, 4)\n    \n    return rainfall_probability\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Process each test case\n    for _ in range(test_cases):\n        # Read the probability of rainfall and time\n        p, time = map(float, input().split())\n\n        # Calculate and print the rainfall probability\n        print(calculate_rainfall_probability(p, time))\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(rainfall_probability, travel_time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n        rainfall_probability (float): The probability that it will rain today.\n        travel_time (int): The time it will take for Raj to reach his office.\n\n    Returns:\n        float: The probability that it rains during the time Raj is on the way.\n    \"\"\"\n    # Calculate the total number of minutes in a day\n    total_minutes = 1440\n\n    # Calculate the probability that it rains during the travel time\n    probability = rainfall_probability * (travel_time / total_minutes)\n\n    # Return the probability rounded to 4 decimal places\n    return round(probability, 4)\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Process each test case\nfor _ in range(test_cases):\n    # Read the rainfall probability and travel time\n    rainfall_probability, travel_time = map(float, input().split())\n\n    # Calculate and print the result\n    print(calculate_probability(rainfall_probability, travel_time))", "import math\n\ndef calculate_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n        p (float): The probability that it will rain today.\n        time (int): The time it takes for Raj to reach his office.\n\n    Returns:\n        float: The probability that it rains during the time Raj is on the way.\n    \"\"\"\n    # Calculate the probability that it rains during the time Raj is on the way\n    # This is equivalent to the probability that it rains in any given minute times\n    # the number of minutes Raj is on the way\n    probability = p * time\n    # If the probability is greater than 1, it means that it rains with certainty\n    # So, we return 1 instead of the actual probability\n    if probability > 1:\n        return 1\n    else:\n        return probability\n\ndef main():\n    # Get the number of test cases\n    t = int(input())\n    # Iterate over each test case\n    for _ in range(t):\n        # Get the probability and time\n        p, time = map(float, input().split())\n        # Calculate the probability that it rains during the time Raj is on the way\n        probability = calculate_probability(p, time)\n        # Round the result to 4 decimal places and print it\n        print(\"{:.4f}\".format(probability))\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability():\n    \"\"\"\n    Calculate the probability that it rains during the time taken to reach the office.\n\n    Args:\n        None\n\n    Returns:\n        float: The probability of rainfall during the specified time.\n    \"\"\"\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Iterate over each test case\n    for _ in range(num_test_cases):\n        # Read the probability of rainfall and time\n        P, time = map(float, input().split())\n\n        # Calculate the probability of rainfall during the specified time\n        # by multiplying the probability of rainfall with the ratio of the specified time to the total time (1440)\n        probability = P * (time / 1440)\n\n        # Print the result rounded to 4 decimal places\n        print(f\"{probability:.4f}\")\n\n# Call the function\ncalculate_rainfall_probability()", "def probability_of_rainfall(T, P, time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n    T (int): The number of test cases.\n    P (float): The probability that it will rain today.\n    time (int): The time it will take for Raj to reach his office.\n\n    Returns:\n    float: The probability that it rains during the time Raj is on the way.\n    \"\"\"\n    # Calculate the probability that it rains during the time Raj is on the way\n    # Since the rain occurs independently every minute, we multiply the probability of rain for each minute\n    probability = P * (time / 1440)\n\n    # Return the result rounded to 4 decimal places\n    return round(probability, 4)\n\n\n# Read the number of test cases\nT = int(input())\n\n# Process each test case\nfor _ in range(T):\n    # Read the probability of rain and time\n    P, time = map(float, input().split())\n\n    # Calculate and print the result\n    print(probability_of_rainfall(T, P, time))", "import math\n\ndef calculate_rain_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n    p (float): The probability that it will rain today.\n    time (int): The time it will take for Raj to reach his office.\n\n    Returns:\n    float: The probability that it rains during the time Raj is on the way.\n    \"\"\"\n    # Calculate the number of minutes in a day\n    minutes_in_a_day = 1440\n\n    # Calculate the number of intervals of 'time' minutes in a day\n    num_intervals = minutes_in_a_day // time\n\n    # Calculate the probability that it rains during one interval\n    interval_prob = p\n\n    # Calculate the probability that it does not rain during one interval\n    non_rain_prob = 1 - interval_prob\n\n    # Calculate the probability that it does not rain during any interval\n    non_rain_prob_all = (non_rain_prob) ** num_intervals\n\n    # Calculate the probability that it rains during at least one interval\n    rain_prob = 1 - non_rain_prob_all\n\n    return round(rain_prob, 4)\n\n# Read the number of test cases\nnum_test_cases = int(input())\n\n# Process each test case\nfor _ in range(num_test_cases):\n    # Read the probability and time\n    p, time = map(float, input().split())\n\n    # Calculate and print the probability\n    print(calculate_rain_probability(p, time))", "import math\n\ndef calculate_probability(time, probability):\n    \"\"\"\n    Calculate the probability that it rains during the given time.\n    \n    Args:\n    time (int): Time in minutes.\n    probability (float): Probability of rain.\n    \n    Returns:\n    float: Probability of rain during the given time.\n    \"\"\"\n    # Calculate the probability of no rain during the given time\n    no_rain_probability = (1 - probability) ** (time / 1440)\n    \n    # Calculate the probability of rain during the given time\n    rain_probability = 1 - no_rain_probability\n    \n    # Round the result to 4 decimal places\n    return round(rain_probability, 4)\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n    \n    # Process each test case\n    for _ in range(test_cases):\n        # Read the probability and time\n        probability, time = input().split()\n        probability = float(probability)\n        time = int(time)\n        \n        # Calculate and print the result\n        print(calculate_probability(time, probability))\n\nif __name__ == \"__main__\":\n    main()", "import scipy.stats as stats\nimport math\n\ndef calculate_rainfall_probability(test_cases):\n    \"\"\"\n    Calculate the probability of rainfall during the specified time interval.\n\n    Args:\n    test_cases (list): A list of tuples containing the probability of rainfall and travel time.\n\n    Returns:\n    list: A list of probabilities of rainfall during the specified time interval.\n    \"\"\"\n    results = []\n    for p, time in test_cases:\n        # Calculate the rate parameter (lambda) for the exponential distribution\n        lambda_val = 1 / (1 - p)\n        \n        # Calculate the probability of rainfall during the specified time interval\n        probability = 1 - stats.expon.cdf(time, scale=1 / lambda_val)\n        \n        # Round the result to 4 decimal places\n        probability = round(probability, 4)\n        \n        results.append(probability)\n    \n    return results\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n    \n    # Read the test cases\n    test_cases = []\n    for _ in range(num_test_cases):\n        p, time = map(float, input().split())\n        test_cases.append((p, time))\n    \n    # Calculate and print the results\n    results = calculate_rainfall_probability(test_cases)\n    for result in results:\n        print(result)\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability(test_cases):\n    \"\"\"\n    Calculate the probability of rainfall during Raj's commute.\n\n    Parameters:\n    test_cases (int): Number of test cases.\n\n    Returns:\n    list: List of probabilities for each test case.\n    \"\"\"\n\n    # Initialize an empty list to store probabilities\n    probabilities = []\n\n    # Loop through each test case\n    for _ in range(test_cases):\n        # Read input values for probability and time\n        probability, time = map(float, input().split())\n\n        # Calculate the probability of no rainfall during the commute\n        no_rainfall_probability = (1 - probability) ** (time / 1440)\n\n        # Calculate the probability of rainfall during the commute\n        rainfall_probability = 1 - no_rainfall_probability\n\n        # Round the probability to 4 decimal places\n        rainfall_probability = round(rainfall_probability, 4)\n\n        # Append the result to the list\n        probabilities.append(rainfall_probability)\n\n    return probabilities\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Call the function and print the results\nprobabilities = calculate_rainfall_probability(test_cases)\nfor probability in probabilities:\n    print(probability)", "import math\n\ndef calculate_rain_probability(probability, time):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes to reach the office.\n\n    Args:\n    probability (float): The probability of rainfalls today.\n    time (int): The time it takes to reach the office.\n\n    Returns:\n    float: The probability that it rains during the time it takes to reach the office.\n    \"\"\"\n    # Calculate the probability that it rains during the time it takes to reach the office\n    # This is done by multiplying the probability of rain today with the proportion of time it rains\n    # Since the probability of rain today is constant, we can ignore it and just calculate the proportion of time it rains\n    # This is done by dividing the time by 1440 (the total number of minutes in a day)\n    proportion_of_time_rains = time / 1440\n\n    # Return the probability that it rains during the time it takes to reach the office\n    return probability * proportion_of_time_rains\n\n\n# Read the number of test cases\nnum_test_cases = int(input())\n\n# Process each test case\nfor _ in range(num_test_cases):\n    # Read the probability of rain and time\n    probability, time = map(float, input().split())\n\n    # Calculate the probability that it rains during the time it takes to reach the office\n    probability_rains = calculate_rain_probability(probability, time)\n\n    # Print the result\n    print(f\"{probability_rains:.4f}\")", "import math\n\ndef calculate_rain_probability(test_cases):\n    \"\"\"\n    Calculate the probability of rain during Raj's commute.\n\n    Args:\n    test_cases (list): A list of tuples containing the probability of rain and time to reach the office.\n\n    Returns:\n    list: A list of probabilities of rain during Raj's commute.\n    \"\"\"\n    probabilities = []\n    for probability, time in test_cases:\n        # Calculate the probability of rain during Raj's commute\n        # Assuming the commute time is a perfect divisor of 1440\n        commute_time_probability = probability * (time / 1440)\n        probabilities.append(round(commute_time_probability, 4))\n    return probabilities\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Read the test cases\n    test_cases_data = []\n    for _ in range(test_cases):\n        probability, time = map(float, input().split())\n        test_cases_data.append((probability, time))\n\n    # Calculate the probabilities\n    probabilities = calculate_rain_probability(test_cases_data)\n\n    # Print the probabilities\n    for probability in probabilities:\n        print(f\"{probability}\")\n\nif __name__ == \"__main__\":\n    main()", "def calculate_probability(rainfall_probability, travel_time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n        rainfall_probability (float): The probability that it will rain today.\n        travel_time (int): The time it will take for Raj to reach his office.\n\n    Returns:\n        float: The probability that it rains during the travel time.\n    \"\"\"\n    # Calculate the probability that it does not rain\n    no_rain_probability = 1 - rainfall_probability\n    \n    # The probability that it rains during the travel time is the probability of rain\n    # times the probability of no rain up to the travel time\n    rain_probability = rainfall_probability * (no_rain_probability ** (travel_time // 1440))\n    \n    # Round the answer to 4 decimal places\n    return round(rain_probability, 4)\n\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Process each test case\n    for _ in range(test_cases):\n        # Read the rainfall probability and travel time\n        rainfall_probability, travel_time = map(float, input().split())\n\n        # Calculate and print the probability that it rains during the travel time\n        print(calculate_probability(rainfall_probability, travel_time))\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n    \n    Parameters:\n    p (float): The probability of rain today.\n    time (int): The time it takes for Raj to reach his office in minutes.\n    \n    Returns:\n    float: The probability that it rains during the time Raj is on the way.\n    \"\"\"\n    # Calculate the probability of no rain during the time Raj is on the way\n    no_rain_probability = (1 - p) ** (time // 1440)\n    \n    # The probability that it rains during the time Raj is on the way is 1 - the probability of no rain\n    rain_probability = 1 - no_rain_probability\n    \n    # Round the result to 4 decimal places\n    rain_probability = round(rain_probability, 4)\n    \n    return rain_probability\n\n# Read the number of test cases\nnum_test_cases = int(input())\n\n# Process each test case\nfor _ in range(num_test_cases):\n    # Read the probability of rain and time\n    p, time = map(float, input().split())\n    \n    # Calculate and print the probability that it rains during the time Raj is on the way\n    print(calculate_probability(p, time))", "def calculate_probability(rainfall_probability, travel_time):\n    \"\"\"\n    Calculate the probability of rainfall during Raj's journey to the office.\n\n    Args:\n    - rainfall_probability (float): The probability of rainfall today (P).\n    - travel_time (int): The time it takes for Raj to reach his office (in minutes).\n\n    Returns:\n    - float: The probability of rainfall during Raj's journey.\n    \"\"\"\n    # Calculate the probability of no rainfall during the entire journey\n    no_rainfall_probability = (1 - rainfall_probability) ** (travel_time // 1440)\n    \n    # Calculate the probability of rainfall during Raj's journey\n    rainfall_probability_journey = 1 - no_rainfall_probability\n    \n    # Round the answer to 4 decimal places\n    return round(rainfall_probability_journey, 4)\n\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Process each test case\n    for _ in range(test_cases):\n        # Read the rainfall probability and travel time\n        rainfall_probability, travel_time = map(float, input().split())\n\n        # Calculate the probability of rainfall during Raj's journey\n        probability = calculate_probability(rainfall_probability, travel_time)\n\n        # Print the result\n        print(probability)\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability(test_cases):\n    \"\"\"\n    Calculates the probability that it rains during the time Raj is on the way to his office.\n\n    Args:\n    test_cases (list): A list of tuples containing the probability of rain (P) and time (in minutes)\n\n    Returns:\n    list: A list of probabilities of rain during the specified time\n    \"\"\"\n    results = []\n    for p, time in test_cases:\n        # Calculate the probability of rain during the specified time\n        probability = p * math.exp(-p * time / 1440)\n        results.append(round(probability, 4))\n    return results\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Read the test cases\n    test_cases_data = []\n    for _ in range(test_cases):\n        p, time = map(float, input().split())\n        test_cases_data.append((p, time))\n\n    # Calculate and print the results\n    results = calculate_rainfall_probability(test_cases_data)\n    for result in results:\n        print(result)\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability(time, probability):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on his way to the office.\n\n    Args:\n        time (int): Time taken to reach the office in minutes.\n        probability (float): Probability of rain today.\n\n    Returns:\n        float: Probability that it rains during the time Raj is on his way to the office.\n    \"\"\"\n    # Calculate the probability that it does not rain\n    no_rain_probability = 1 - probability\n    \n    # Calculate the probability that it rains using the formula for exponential distribution\n    # The exponential distribution is used to model the time between events in a Poisson process\n    rainfall_probability = (1 - math.exp(-probability * time))\n\n    return round(rainfall_probability, 4)\n\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Process each test case\n    for _ in range(num_test_cases):\n        # Read the probability and time\n        probability, time = map(float, input().split())\n\n        # Calculate and print the rainfall probability\n        print(calculate_rainfall_probability(time, probability))\n\n\nif __name__ == \"__main__\":\n    main()", "import random\n\ndef probability_of_rainfall(p, time):\n    \"\"\"\n    Calculate the probability of rainfall during Raj's commute.\n\n    Args:\n    p (float): Probability of rainfall today (0-1)\n    time (int): Time (in minutes) it takes for Raj to reach his office\n\n    Returns:\n    float: Probability of rainfall during Raj's commute\n    \"\"\"\n    # Calculate the number of minutes in a day\n    minutes_in_day = 1440\n    \n    # Calculate the number of minutes of the day that Raj is commuting\n    commute_minutes = time\n    \n    # Calculate the expected number of rainy minutes in a day\n    expected_rainy_minutes = minutes_in_day * p\n    \n    # Calculate the probability of rainfall during Raj's commute\n    # by dividing the expected rainy minutes by the total minutes\n    probability = (expected_rainy_minutes / minutes_in_day) * commute_minutes\n    \n    # Round the result to 4 decimal places\n    return round(probability, 4)\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Process each test case\nfor _ in range(test_cases):\n    # Read the probability of rainfall and commute time\n    p, time = map(float, input().split())\n    \n    # Calculate and print the probability of rainfall during Raj's commute\n    print(probability_of_rainfall(p, time))", "import math\n\ndef calculate_probability(rain_probability, time):\n    \"\"\"\n    Calculate the probability of rain during the given time.\n\n    Args:\n    rain_probability (float): The probability of rain today.\n    time (int): The time it takes for Raj to reach his office in minutes.\n\n    Returns:\n    float: The probability of rain during the given time.\n    \"\"\"\n    # Calculate the probability of no rain during the given time\n    no_rain_probability = (1 - rain_probability) ** (time / 1440)\n    \n    # Calculate the probability of rain during the given time\n    rain_probability_time = 1 - no_rain_probability\n    \n    return round(rain_probability_time, 4)\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Read and process each test case\nfor _ in range(test_cases):\n    # Read the rain probability and time\n    rain_probability, time = input().split()\n    rain_probability = float(rain_probability)\n    time = int(time)\n    \n    # Calculate and print the probability of rain during the given time\n    print(calculate_probability(rain_probability, time))", "def calculate_rainfall_probability(probability, time):\n    \"\"\"\n    Calculate the probability that it rains during a given time.\n\n    Args:\n        probability (float): The probability of rainfalls today.\n        time (int): The time (in minutes) it will take to reach the office.\n\n    Returns:\n        float: The probability that it rains during the given time.\n    \"\"\"\n    # Calculate the probability that it does not rain during the given time\n    no_rain_probability = (1 - probability) ** (time / 1440)\n    \n    # Calculate the probability that it rains during the given time\n    rainfall_probability = 1 - no_rain_probability\n    \n    # Round the result to 4 decimal places\n    return round(rainfall_probability, 4)\n\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Process each test case\n    for _ in range(num_test_cases):\n        # Read the probability of rainfalls and the time\n        probability, time = map(float, input().split())\n\n        # Calculate and print the probability that it rains during the given time\n        print(calculate_rainfall_probability(probability, time))\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rain_probability(probability, time):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes to reach the office.\n    \n    Args:\n    probability (float): The probability of rain today.\n    time (int): The time it takes to reach the office in minutes.\n    \n    Returns:\n    float: The probability that it rains during the time it takes to reach the office.\n    \"\"\"\n    # Calculate the probability that it does not rain\n    no_rain_probability = 1 - probability\n    \n    # Calculate the probability that it rains during the time it takes to reach the office\n    # This is done by dividing the time into intervals of 1440 minutes (a day)\n    # and calculating the probability of rain in each interval\n    rain_probability = 1 - (math.pow(no_rain_probability, time // 1440))\n    \n    # Return the result, rounded to 4 decimal places\n    return round(rain_probability, 4)\n\ndef main():\n    # Get the number of test cases\n    test_cases = int(input())\n    \n    # Process each test case\n    for _ in range(test_cases):\n        # Get the probability of rain and the time it takes to reach the office\n        probability, time = map(float, input().split())\n        \n        # Calculate and print the result\n        print(calculate_rain_probability(probability, time))\n\nif __name__ == \"__main__\":\n    main()", "def calculate_rain_probability(test_cases):\n    \"\"\"\n    Calculate the probability of rain during the time it takes for Raj to reach his office.\n\n    Args:\n        test_cases (list): A list of tuples, where each tuple contains a probability of rain and time.\n\n    Returns:\n        list: A list of probabilities of rain during the time it takes for Raj to reach his office.\n    \"\"\"\n    result = []\n    for probability, time in test_cases:\n        # Calculate the probability of no rain during the time\n        no_rain_probability = (1 - probability) ** (time // 1440)\n        \n        # Calculate the probability of rain during the time\n        rain_probability = 1 - no_rain_probability\n        \n        # Round the result to 4 decimal places\n        rain_probability = round(rain_probability, 4)\n        \n        result.append(rain_probability)\n    \n    return result\n\n\ndef main():\n    \"\"\"\n    Read the number of test cases, and for each test case, read the probability of rain and time,\n    calculate the probability of rain during the time, and print the result.\n    \"\"\"\n    test_cases = int(input())\n    test_cases_data = []\n    \n    for _ in range(test_cases):\n        # Read the probability of rain and time\n        probability, time = map(float, input().split())\n        \n        # Calculate the probability of rain during the time\n        result = calculate_rain_probability([(probability, time)])\n        \n        # Print the result\n        print(result[0])\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(rainfall_probability, travel_time):\n    \"\"\"\n    Calculate the probability of rainfall during Raj's journey.\n\n    Args:\n        rainfall_probability (float): The probability of rainfall today.\n        travel_time (int): The time it takes for Raj to reach his office.\n\n    Returns:\n        float: The probability of rainfall during Raj's journey.\n    \"\"\"\n    # Calculate the probability of no rainfall during Raj's journey\n    no_rainfall_probability = (1 - rainfall_probability) ** (travel_time / 1440)\n\n    # Calculate the probability of rainfall during Raj's journey\n    rainfall_probability_during_journey = 1 - no_rainfall_probability\n\n    # Round the result to 4 decimal places\n    return round(rainfall_probability_during_journey, 4)\n\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Process each test case\n    for _ in range(test_cases):\n        # Read the probability of rainfall and travel time\n        rainfall_probability, travel_time = map(float, input().split())\n\n        # Calculate and print the probability of rainfall during Raj's journey\n        print(calculate_probability(rainfall_probability, travel_time))\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability(num_test_cases):\n    \"\"\"\n    Calculate the probability of rainfall during the time Raj is on the way.\n\n    Args:\n    num_test_cases (int): The number of test cases.\n\n    Returns:\n    None\n    \"\"\"\n    for _ in range(num_test_cases):\n        P, time = map(float, input().split())\n\n        # Calculate the probability of no rainfall during the given time\n        no_rainfall_prob = (1 - P) ** (time // 1440)\n\n        # Calculate the probability of rainfall during the given time\n        rainfall_prob = 1 - no_rainfall_prob\n\n        # Round the result to 4 decimal places\n        rainfall_prob = round(rainfall_prob, 4)\n\n        print(f\"{rainfall_prob:.4f}\")\n\n# Read the number of test cases\nnum_test_cases = int(input())\n\n# Process each test case\ncalculate_rainfall_probability(num_test_cases)", "def calculate_rainfall_probability():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    for _ in range(test_cases):\n        # Read the probability of rain and travel time\n        probability_of_rain, travel_time = map(float, input().split())\n\n        # Calculate the probability of rain during the travel time\n        # Assuming the rain is uniform and independent of the time\n        probability_of_rain_during_travel = probability_of_rain * (travel_time / 1440)\n\n        # Round the result to 4 decimal places\n        result = round(probability_of_rain_during_travel, 4)\n\n        # Print the result\n        print(result)\n\ncalculate_rainfall_probability()", "import math\n\ndef calculate_rain_probability(probability, time):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes to reach the office.\n\n    Args:\n    probability (float): The probability that it will rain today.\n    time (int): The time it takes to reach the office in minutes.\n\n    Returns:\n    float: The probability that it rains during the time it takes to reach the office.\n    \"\"\"\n    # Calculate the probability that it does not rain during the time it takes to reach the office\n    no_rain_probability = (1 - probability) ** (time / 1440)\n    \n    # Calculate the probability that it rains during the time it takes to reach the office\n    rain_probability = 1 - no_rain_probability\n    \n    # Round the result to 4 decimal places\n    return round(rain_probability, 4)\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n    \n    # Process each test case\n    for _ in range(test_cases):\n        # Read the probability and time\n        probability, time = map(float, input().split())\n        \n        # Calculate and print the result\n        print(calculate_rain_probability(probability, time))\n\nif __name__ == \"__main__\":\n    main()", "def calculate_probability(T, cases):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n    T (int): Number of test cases.\n    cases (list): A list of tuples, where each tuple contains probability (P) and time (time).\n\n    Returns:\n    None\n    \"\"\"\n    import math\n\n    for i, case in enumerate(cases):\n        P, time = case\n        # Calculate the probability that it rains during the time Raj is on the way\n        probability = P * (1 - (1 - P) ** (1440 / time))\n        # Round the result to 4 decimal places\n        probability = round(probability, 4)\n        # Print the result\n        print(f\"{probability:.4f}\")\n\n# Read the number of test cases\nT = int(input())\n\n# Read the test cases\ncases = []\nfor _ in range(T):\n    P, time = map(float, input().split())\n    cases.append((P, time))\n\n# Call the function\ncalculate_probability(T, cases)", "import math\n\ndef calculate_rainfall_probability(test_cases):\n    \"\"\"\n    Calculate the probability of rainfall during Raj's commute.\n\n    Args:\n        test_cases (list): A list of tuples containing probability of rainfall and commute time.\n\n    Returns:\n        list: A list of probabilities of rainfall during Raj's commute.\n    \"\"\"\n    rainfall_probabilities = []\n    for probability, time in test_cases:\n        # Calculate the probability of no rainfall\n        no_rainfall_probability = (1 - probability) ** (time / 1440)\n        # Calculate the probability of rainfall\n        rainfall_probability = 1 - no_rainfall_probability\n        rainfall_probabilities.append(round(rainfall_probability, 4))\n    return rainfall_probabilities\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Read the test cases\n    test_cases_data = []\n    for _ in range(test_cases):\n        probability, time = map(float, input().split())\n        test_cases_data.append((probability, time))\n\n    # Calculate and print the rainfall probabilities\n    rainfall_probabilities = calculate_rainfall_probability(test_cases_data)\n    for probability in rainfall_probabilities:\n        print(probability)\n\nif __name__ == \"__main__\":\n    main()", "def calculate_rain_probability(test_cases):\n    \"\"\"\n    Calculate the probability of rain during Raj's travel time.\n\n    Args:\n        test_cases (list): A list of tuples containing the probability of rain and travel time.\n\n    Returns:\n        list: A list of probabilities of rain during Raj's travel time.\n    \"\"\"\n    import math\n\n    # Initialize an empty list to store the results\n    results = []\n\n    # Loop through each test case\n    for probability, time in test_cases:\n        # Calculate the probability of rain during the travel time\n        # This is done by multiplying the probability of rain by the fraction of the day that has passed\n        # Since there are 1440 minutes in a day, the fraction of the day that has passed is time / 1440\n        result = probability * (time / 1440)\n\n        # Round the result to 4 decimal places\n        result = round(result, 4)\n\n        # Append the result to the list\n        results.append(result)\n\n    # Return the list of results\n    return results\n\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Read the test cases\n    test_cases = []\n    for _ in range(num_test_cases):\n        probability, time = map(float, input().split())\n        test_cases.append((probability, time))\n\n    # Calculate and print the results\n    results = calculate_rain_probability(test_cases)\n    for result in results:\n        print(result)\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during a given time period.\n\n    Args:\n    test_cases (list): A list of tuples containing the probability of rain (P) and time (in minutes).\n\n    Returns:\n    list: A list of probabilities that it rains during the given time period.\n    \"\"\"\n    results = []\n    for p, time in test_cases:\n        # Calculate the number of minutes in a day that it doesn't rain\n        no_rain_minutes = 1440 - time\n        # Calculate the probability that it doesn't rain\n        no_rain_probability = 1 - p\n        # Calculate the probability that it rains\n        rain_probability = p\n        # Calculate the probability that it rains during the given time period\n        result = rain_probability * (no_rain_probability ** (time / no_rain_minutes))\n        # Round the result to 4 decimal places\n        result = round(result, 4)\n        results.append(result)\n    return results\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Read the test cases\n    test_cases = []\n    for _ in range(num_test_cases):\n        p, time = map(float, input().split())\n        test_cases.append((p, time))\n\n    # Calculate and print the results\n    results = calculate_rainfall_probability(test_cases)\n    for result in results:\n        print(result)\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(P, time):\n    \"\"\"\n    Calculate the probability of rainfall during Raj's commute.\n\n    Parameters:\n    P (float): Probability of rainfall\n    time (int): Time it takes for Raj to reach his office\n\n    Returns:\n    float: Probability of rainfall during Raj's commute\n    \"\"\"\n    return P * (1 - math.exp(-P))\n\ndef main():\n    # Read the number of test cases\n    T = int(input())\n\n    # Process each test case\n    for _ in range(T):\n        # Read the probability of rainfall and time\n        P, time = map(float, input().split())\n\n        # Calculate and print the probability\n        print(f\"{calculate_probability(P, time):.4f}\")\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(rain_probability, travel_time):\n    \"\"\"\n    Calculate the probability of rain during the travel time.\n\n    Args:\n    - rain_probability (float): The probability of rain today.\n    - travel_time (int): The time it takes for Raj to reach his office in minutes.\n\n    Returns:\n    - float: The probability of rain during the travel time.\n    \"\"\"\n    # Calculate the probability of no rain during the travel time\n    no_rain_probability = (1 - rain_probability) ** (travel_time / 1440)\n    \n    # Calculate the probability of rain during the travel time\n    rain_probability_during_travel = 1 - no_rain_probability\n    \n    # Round the result to 4 decimal places\n    return round(rain_probability_during_travel, 4)\n\n\n# Read the number of test cases\nnum_test_cases = int(input())\n\n# Process each test case\nfor _ in range(num_test_cases):\n    # Read the probability of rain and travel time\n    rain_probability, travel_time = map(float, input().split())\n    \n    # Calculate and print the result\n    result = calculate_probability(rain_probability, travel_time)\n    print(result)", "import math\n\ndef calculate_rainfall_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way to his office.\n\n    Args:\n        p (float): The probability of rain today.\n        time (int): The time it takes for Raj to reach his office in minutes.\n\n    Returns:\n        float: The probability that it rains during the time Raj is on the way.\n    \"\"\"\n    # Calculate the number of minutes in a day\n    minutes_in_day = 1440\n\n    # Calculate the probability that it rains during the time Raj is on the way\n    probability = p * (time / minutes_in_day)\n\n    # Round the result to 4 decimal places\n    probability = round(probability, 4)\n\n    return probability\n\ndef main():\n    # Read the number of test cases\n    t = int(input())\n\n    # Process each test case\n    for _ in range(t):\n        # Read the probability of rain and time\n        p, time = map(float, input().split())\n\n        # Calculate and print the result\n        print(calculate_rainfall_probability(p, time))\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rain_probability(T, P, time):\n    \"\"\"\n    Calculate the probability of rain during the time Raj is on his way to the office.\n\n    Args:\n    T (int): The number of test cases.\n    P (float): The probability of rain today.\n    time (int): The time (in minutes) it will take for Raj to reach his office.\n\n    Returns:\n    None\n    \"\"\"\n    # Calculate the probability of no rain\n    no_rain_probability = 1 - P\n\n    # Calculate the probability of rain during the time\n    rain_probability = 1 - math.pow(no_rain_probability, time / 1440)\n\n    # Return the result rounded to 4 decimal places\n    return round(rain_probability, 4)\n\n\n# Read the number of test cases\nT = int(input())\n\n# Iterate over each test case\nfor _ in range(T):\n    # Read the probability of rain and time\n    P, time = input().split()\n    P = float(P)\n    time = int(time)\n\n    # Calculate and print the result\n    print(calculate_rain_probability(T, P, time))", "def calculate_rain_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the given time.\n\n    Args:\n    p (float): The probability of rain.\n    time (int): The time in minutes.\n\n    Returns:\n    float: The probability that it rains during the given time.\n    \"\"\"\n    total_minutes_in_a_day = 1440\n    return round(p * time / total_minutes_in_a_day, 4)\n\n\n# Read the number of test cases\nnum_test_cases = int(input())\n\n# Process each test case\nfor _ in range(num_test_cases):\n    # Read the probability of rain and time\n    p, time = map(float, input().split())\n\n    # Calculate and print the probability of rain during the given time\n    print(calculate_rain_probability(p, time))", "def calculate_rain_probability(test_cases):\n    \"\"\"\n    Calculate the probability of rain during Raj's commute to the office.\n\n    Args:\n    test_cases (list): A list of tuples containing the probability of rain and commute time.\n\n    Returns:\n    None\n    \"\"\"\n    for probability, time in test_cases:\n        # Calculate the probability of rain during the commute\n        probability_of_rain = probability * time / 1440\n\n        # Round the result to 4 decimal places\n        result = round(probability_of_rain, 4)\n        print(f\"{result:.4f}\")\n\n\nif __name__ == \"__main__\":\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Read the test cases\n    test_cases_list = []\n    for _ in range(test_cases):\n        probability, time = map(float, input().split())\n        test_cases_list.append((probability, time))\n\n    # Calculate the probability of rain for each test case\n    calculate_rain_probability(test_cases_list)", "def calculate_probability(rain_probability, travel_time):\n    \"\"\"\n    Calculate the probability of rain during Raj's travel time.\n\n    Args:\n    rain_probability (float): The probability of rain.\n    travel_time (int): The time it takes for Raj to reach his office.\n\n    Returns:\n    float: The probability of rain during Raj's travel time.\n    \"\"\"\n    return (rain_probability / 1440) * travel_time\n\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Process each test case\n    for _ in range(test_cases):\n        # Read the probability of rain and travel time\n        rain_probability, travel_time = map(float, input().split())\n\n        # Calculate and print the result\n        result = round(calculate_probability(rain_probability, travel_time), 4)\n        print(result)\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability():\n    test_cases = int(input())\n\n    for _ in range(test_cases):\n        probability, time = map(float, input().split())\n\n        # Calculate the probability of rain during the given time\n        rainfall_probability = probability * time\n\n        # Round the result to 4 decimal places\n        rainfall_probability = round(rainfall_probability, 4)\n\n        print(f\"{rainfall_probability:.4f}\")\n\ncalculate_rainfall_probability()", "def calculate_rainfall_probability(p, time):\n    \"\"\"\n    Calculate the probability of rainfall during Raj's commute.\n\n    Args:\n    p (float): Probability of rainfall today (0 to 1)\n    time (int): Time taken for Raj to reach his office (in minutes)\n\n    Returns:\n    float: Probability of rainfall during Raj's commute\n    \"\"\"\n    # Calculate the probability of no rainfall during Raj's commute\n    no_rain_probability = (1 - p) ** (time / 1440)\n    \n    # Calculate the probability of rainfall during Raj's commute\n    rainfall_probability = 1 - no_rain_probability\n    \n    return round(rainfall_probability, 4)\n\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Process each test case\nfor _ in range(test_cases):\n    # Read the probability of rainfall and time\n    p, time = map(float, input().split())\n    \n    # Calculate and print the probability of rainfall during Raj's commute\n    print(calculate_rainfall_probability(p, time))", "import math\n\ndef calculate_probability(probability, time):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n        probability (float): The probability that it will rain today.\n        time (int): The time it takes for Raj to reach his office.\n\n    Returns:\n        float: The probability that it rains during the time Raj is on the way.\n    \"\"\"\n    # Calculate the probability that it does not rain during the time\n    no_rain_probability = (1 - probability) ** (time / 1440)\n    \n    # Calculate the probability that it rains during the time\n    rain_probability = 1 - no_rain_probability\n    \n    # Return the probability rounded to 4 decimal places\n    return round(rain_probability, 4)\n\n# Read the number of test cases\ntest_cases = int(input())\n\n# Read and process each test case\nfor _ in range(test_cases):\n    # Read the probability and time\n    probability, time = map(float, input().split())\n    \n    # Calculate and print the probability\n    print(calculate_probability(probability, time))", "import math\n\ndef calculate_rain_probability(T, test_cases):\n    \"\"\"\n    Calculate the probability that it rains during Raj's commute.\n\n    Args:\n    T (int): The number of test cases.\n    test_cases (list): A list of tuples containing probability and time.\n\n    Returns:\n    None\n    \"\"\"\n    for p, time in test_cases:\n        # Calculate the probability of rain during the commute\n        rain_probability = p * (time / 1440)\n        # Round the result to 4 decimal places\n        result = round(rain_probability, 4)\n        print(result)\n\ndef main():\n    # Read the number of test cases\n    T = int(input())\n\n    # Read the test cases\n    test_cases = []\n    for _ in range(T):\n        p, time = map(float, input().split())\n        test_cases.append((p, time))\n\n    # Calculate and print the results\n    calculate_rain_probability(T, test_cases)\n\nif __name__ == \"__main__\":\n    main()", "def calculate_rain_probability(test_cases):\n    \"\"\"\n    Calculate the probability of rain during Raj's commute.\n\n    Args:\n    test_cases (list): A list of tuples containing the probability of rain and commute time.\n\n    Returns:\n    list: A list of probabilities corresponding to each test case.\n    \"\"\"\n    probabilities = []\n    for probability, time in test_cases:\n        # Calculate the probability of rain during the commute\n        # Since the probability of rain is independent of the duration, it's the same as the probability of rain\n        # The probability of no rain is (1 - probability)\n        # The probability of rain during the commute is the probability of no rain times the time\n        probability_during_commute = (1 - probability) * time\n        probabilities.append(round(probability_during_commute, 4))\n    return probabilities\n\n# Read the number of test cases\nnum_test_cases = int(input())\n\n# Read the test cases\ntest_cases = []\nfor _ in range(num_test_cases):\n    probability, time = map(float, input().split())\n    test_cases.append((probability, time))\n\n# Calculate and print the probabilities\nprobabilities = calculate_rain_probability(test_cases)\nfor probability in probabilities:\n    print(probability)", "import math\n\ndef calculate_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes Raj to reach his office.\n\n    Args:\n        p (float): The probability of rain today.\n        time (int): The time (in minutes) it takes for Raj to reach his office.\n\n    Returns:\n        float: The probability of rain during the time it takes Raj to reach his office.\n    \"\"\"\n    # Calculate the number of minutes in a day\n    total_minutes = 1440\n\n    # Calculate the probability of no rain during the time it takes Raj to reach his office\n    no_rain_probability = (1 - p) ** (time / total_minutes)\n\n    # The probability of rain during the time it takes Raj to reach his office is 1 - the probability of no rain\n    rain_probability = 1 - no_rain_probability\n\n    return round(rain_probability, 4)\n\n\ndef main():\n    \"\"\"\n    Read test cases from input, calculate the probability of rain, and print the results.\n    \"\"\"\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Iterate over each test case\n    for _ in range(num_test_cases):\n        # Read the probability of rain and the time it takes Raj to reach his office\n        p, time = map(float, input().split())\n\n        # Calculate and print the probability of rain\n        print(calculate_probability(p, time))\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rain_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes for Raj to reach his office.\n\n    Args:\n    p (float): The probability that it will rain today.\n    time (int): The time it takes for Raj to reach his office in minutes.\n\n    Returns:\n    float: The probability that it rains during the time it takes for Raj to reach his office.\n    \"\"\"\n    # Calculate the probability that it does not rain during the time it takes for Raj to reach his office\n    no_rain_probability = (1 - p) ** (time / 1440)\n    # Calculate the probability that it rains during the time it takes for Raj to reach his office\n    rain_probability = 1 - no_rain_probability\n    # Round the result to 4 decimal places\n    return round(rain_probability, 4)\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n    # Loop over each test case\n    for _ in range(test_cases):\n        # Read the probability of rain and time\n        p, time = map(float, input().split())\n        # Calculate and print the probability that it rains during the time it takes for Raj to reach his office\n        print(calculate_rain_probability(p, time))\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(p, time):\n    \"\"\"\n    Calculate the probability of rainfall during Raj's commute.\n\n    Args:\n    p (float): Probability of rainfall today.\n    time (int): Time (in minutes) it takes for Raj to reach his office.\n\n    Returns:\n    float: Probability of rainfall during Raj's commute.\n    \"\"\"\n    # Calculate the number of trials (time / 1440)\n    trials = time / 1440\n    # Calculate the probability of rainfall during Raj's commute using binomial distribution\n    probability = (math.comb(trials, 1) * p * (1 - p) + math.comb(trials, 2) * (p ** 2)) / 2\n    return round(probability, 4)\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n    # Process each test case\n    for _ in range(test_cases):\n        # Read the probability of rainfall and time\n        p, time = map(float, input().split())\n        # Calculate and print the probability of rainfall during Raj's commute\n        print(calculate_probability(p, time))\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way.\n\n    Args:\n        test_cases (list): A list of tuples containing the probability of rainfall `P` and time `time`.\n\n    Returns:\n        list: A list of probabilities that it rains during the time Raj is on the way.\n    \"\"\"\n    probabilities = []\n    for P, time in test_cases:\n        # Calculate the probability that it rains during the time Raj is on the way\n        # This is the probability that it rains in the first 'time' minutes divided by the total number of minutes in a day\n        rainfall_probability = (P * time) / 1440\n        probabilities.append(round(rainfall_probability, 4))\n    return probabilities\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n\n    # Read the test cases\n    test_cases = []\n    for _ in range(num_test_cases):\n        P, time = map(float, input().split())\n        test_cases.append((P, time))\n\n    # Calculate and print the probabilities\n    probabilities = calculate_rainfall_probability(test_cases)\n    for probability in probabilities:\n        print(probability)\n\nif __name__ == \"__main__\":\n    main()", "def calculate_rain_probability(p, time):\n    \"\"\"\n    Calculate the probability that it rains during the time it takes to reach the office.\n\n    Args:\n    p (float): The probability of rain today.\n    time (int): The time it takes to reach the office in minutes.\n\n    Returns:\n    float: The probability that it rains during the time it takes to reach the office.\n    \"\"\"\n    # Calculate the probability that it rains during the time it takes to reach the office\n    probability = p * time\n\n    # Return the probability rounded to 4 decimal places\n    return round(probability, 4)\n\n\ndef main():\n    # Read the number of test cases\n    test_cases = int(input())\n\n    # Process each test case\n    for _ in range(test_cases):\n        # Read the probability of rain and time\n        probability, time = map(float, input().split())\n\n        # Calculate and print the probability that it rains during the time it takes to reach the office\n        print(calculate_rain_probability(probability, time))\n\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_probability(time, probability):\n    \"\"\"\n    Calculate the probability of rain during the time it takes for Raj to reach his office.\n\n    Args:\n    time (float): Time it takes for Raj to reach his office in minutes.\n    probability (float): Probability of rain today.\n\n    Returns:\n    float: Probability of rain during the time it takes for Raj to reach his office.\n    \"\"\"\n    # Calculate the number of minutes in a day\n    minutes_in_a_day = 1440\n    \n    # Calculate the probability of rain during the time it takes for Raj to reach his office\n    # This is done by multiplying the probability of rain today with the ratio of the given time to the total time in a day\n    result = probability * (time / minutes_in_a_day)\n    \n    # Round the result to 4 decimal places\n    result = round(result, 4)\n    \n    return result\n\ndef main():\n    # Read the number of test cases\n    num_test_cases = int(input())\n    \n    # Read the test cases\n    for _ in range(num_test_cases):\n        # Read the probability of rain and the time it takes for Raj to reach his office\n        probability, time = map(float, input().split())\n        \n        # Calculate and print the result\n        print(calculate_probability(time, probability))\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability(test_cases):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on his way to the office.\n\n    Args:\n    test_cases (int): The number of test cases.\n\n    Returns:\n    list: A list of probabilities for each test case.\n    \"\"\"\n    probabilities = []\n    for _ in range(test_cases):\n        P, time = map(float, input().split())\n        # Calculate the probability using the formula for exponential distribution\n        probability = (1 - (1 - P) ** (time / 1440))\n        # Round the probability to 4 decimal places\n        probability = round(probability, 4)\n        probabilities.append(probability)\n    return probabilities\n\ndef main():\n    test_cases = int(input())\n    probabilities = calculate_rainfall_probability(test_cases)\n    for probability in probabilities:\n        print(f\"{probability}\")\n\nif __name__ == \"__main__\":\n    main()", "import math\n\ndef calculate_rainfall_probability(num_cases, cases):\n    \"\"\"\n    Calculate the probability that it rains during the time Raj is on the way to his office.\n\n    Args:\n    num_cases (int): The number of test cases.\n    cases (list): A list of tuples containing the probability of rain and time.\n\n    Returns:\n    list: A list of probabilities that it rains during the time Raj is on the way.\n    \"\"\"\n    rainfall_probabilities = []\n    for probability, time in cases:\n        # Calculate the probability that it rains during the time\n        # Since the probability of rain is given, we can directly multiply it with the time\n        probability_rains = probability * time / 1440\n        rainfall_probabilities.append(round(probability_rains, 4))\n    return rainfall_probabilities\n\n# Read the number of test cases\nnum_cases = int(input())\n\n# Read the cases\ncases = []\nfor _ in range(num_cases):\n    probability, time = map(float, input().split())\n    cases.append((probability, time))\n\n# Calculate and print the rainfall probabilities\nrainfall_probabilities = calculate_rainfall_probability(num_cases, cases)\nfor probability in rainfall_probabilities:\n    print(probability)"]}]
